[{"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\index.js":"1","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\reportWebVitals.js":"2","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\App.js":"3","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Profile.js":"4","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\CustomBox\\TextBox.js":"5","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\Routes.js":"6","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Sidebar.js":"7","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Header.js":"8","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Dashboard.js":"9"},{"size":498,"mtime":1608727111700,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":410,"mtime":1608810493722,"results":"13","hashOfConfig":"11"},{"size":7539,"mtime":1608971863564,"results":"14","hashOfConfig":"11"},{"size":1585,"mtime":1608783955030,"results":"15","hashOfConfig":"11"},{"size":425,"mtime":1609416854793,"results":"16","hashOfConfig":"11"},{"size":1669,"mtime":1609416793011,"results":"17","hashOfConfig":"11"},{"size":992,"mtime":1608972938715,"results":"18","hashOfConfig":"11"},{"size":2341,"mtime":1609418800316,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19vawuq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\index.js",[],["43","44"],"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\reportWebVitals.js",[],"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\App.js",["45","46"],"import logo from './logo.svg';\nimport Profile from './components/Profile'\nimport Sidebar from './components/Sidebar'\nimport Header from './components/Header'\nimport { BrowserRouter } from \"react-router-dom\";\nimport BaseRouter from './Routes'\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Header />\n        <Sidebar />\n        <BaseRouter />\n      </BrowserRouter>    \n  );\n}\n\nexport default App;\n","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Profile.js",["47","48","49","50","51","52","53"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport CustomTextBox from './CustomBox/TextBox'\r\nimport Logo from '../logo-light.png'\r\nimport $ from 'jquery'\r\nimport swal from 'sweetalert'\r\n\r\nexport class Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            full_name:'',\r\n            user_name:'',\r\n            country:'',\r\n            password:'',\r\n            confirm_password:'',\r\n            email:'',\r\n            user_type:'',\r\n            position:'',\r\n            \r\n        }\r\n    }\r\n\r\n    onChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    swalAlert =(name)=>{\r\n        swal({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'please fillout '+name,\r\n              button:{\r\n                OK:true\r\n              },\r\n            }).then((value)=>{\r\n              $(\"#\"+name).focus()\r\n            });\r\n    }\r\n    onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const { full_name,user_name,country,password,confirm_password,email,user_type,position,} = this.state;\r\n    \r\n        const condition=(full_name===\"\")?this.swalAlert(\"full_name\"): \r\n        (user_name===\"\")?this.swalAlert(\"user_name\"):\r\n        (country===\"\")?this.swalAlert(\"country\"):\r\n        (email===\"\")?this.swalAlert(\"email\"): \r\n        (user_type===\"\")?this.swalAlert(\"user_type\"): \r\n        (position===\"\")?this.swalAlert(\"position\"):\r\n        (password===\"\")?this.swalAlert(\"password\"):\r\n        (confirm_password===\"\")?this.swalAlert(\"confirm_password\"): \r\n        swal({icon: 'success',text: 'Profile submitted successfully'})\r\n       \r\n\r\n    }\r\n    \r\n    render() {\r\n        const { full_name,user_name,country,password,confirm_password,email,user_type,position,} = this.state;\r\n        return (\r\n            <div>\r\n                <Container  >\r\n                    <Card style={{marginTop:\"50px\"}} >\r\n                        <Row>\r\n                            <Col lg={4} sm={12}>\r\n                                \r\n                                <Image src={Logo} className=\"profile-img\" ></Image>\r\n                            \r\n                            </Col>\r\n                            <Col  lg={4} sm={12}>\r\n\r\n                            <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"Full name\"\r\n                            txtBoxType =\"text\"\r\n                            txtBoxName = \"full_name\"\r\n                            txtBoxValue = {full_name}\r\n                            txtBoxID = \"full_name\"\r\n                            txtBoxPH =\"Full Name\"\r\n                            changeEvent = {this.onChange}\r\n                            />\r\n                            <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"User name\"\r\n                            txtBoxType =\"text\"\r\n                            txtBoxName = \"user_name\"\r\n                            txtBoxValue = {user_name}\r\n                            txtBoxID = \"user_name\"\r\n                            txtBoxPH =\"User Name\"\r\n                            changeEvent = {this.onChange}\r\n                            />\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Col>\r\n                                <Form.Control as=\"select\" className=\"select-style\" name=\"country\"  value={country} onChange={this.onChange} required>\r\n                                        <option value=\"country\"selected disabled> </option>\r\n                                        <option value=\"Country 1\">Country 1</option>\r\n                                        <option value=\"Country 2\">Country 2</option>\r\n                                        <option value=\"Country 3\">Country 3 </option>\r\n                                        <option value=\"Country 4\">Country 4</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"Email\"\r\n                            txtBoxType =\"text\"\r\n                            txtBoxName = \"email\"\r\n                            txtBoxValue = {email}\r\n                            txtBoxID = \"email\"\r\n                            txtBoxPH =\"Email\"\r\n                            changeEvent =  {this.onChange}\r\n                            />\r\n                           \r\n                            \r\n                            \r\n                            </Col>\r\n\r\n                            {/* 2cond col */}\r\n\r\n                            <Col lg={4} sm={12}>\r\n                            \r\n                            \r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>User Type</Form.Label>\r\n                                <Col>\r\n                                <Form.Control as=\"select\"  name=\"user_type\" value={user_type}  onChange={this.onChange} required>\r\n                                        <option value=\"\"selected disabled> User type</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                        <option value=\"User\">User</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"Position\"\r\n                            txtBoxType =\"text\"\r\n                            txtBoxName = \"position\"\r\n                            txtBoxValue = {position}\r\n                            txtBoxID = \"position\"\r\n                            txtBoxPH =\"Position\"\r\n                            changeEvent =  {this.onChange}\r\n                            />\r\n                             <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\" Password\"\r\n                            txtBoxType =\"password\"\r\n                            txtBoxName = \"password\"\r\n                            txtBoxValue = {password}\r\n                            txtBoxID = \"password\"\r\n                            txtBoxPH =\"Password\"\r\n                            changeEvent =  {this.onChange}\r\n                            />\r\n                            <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"Confirm\"\r\n                            txtBoxType =\"text\"\r\n                            txtBoxName = \"confirm_password\"\r\n                            txtBoxValue = {confirm_password}\r\n                            txtBoxID = \"confirm_password\"\r\n                            txtBoxPH =\"Password\"\r\n                            changeEvent = {this.onChange}\r\n                            />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row justify-content-center\">\r\n                            <Button onClick={this.onSubmit}>Save</Button>\r\n                        </Row>\r\n                    </Card>\r\n                </Container>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\CustomBox\\TextBox.js",["54","55"],"import React from 'react';\r\nimport {\r\n    Form,Row,Col\r\n} from 'react-bootstrap';\r\n\r\n\r\nconst CustomTextBox = (props) =>{\r\n    \r\n    return (\r\n        <Form.Group as={Col}>\r\n        <Form.Label className={props.style} >{props.txtBoxLabel}</Form.Label>\r\n        <Col>\r\n            <Form.Control type={props.txtBoxType}  id={props.txtBoxID}\r\n             placeholder={props.txtBoxPH} \r\n             value={props.txtBoxValue}\r\n             onChange={props.changeEvent}\r\n             name={props.txtBoxName}\r\n             required\r\n             />\r\n        </Col>\r\n    </Form.Group>\r\n//     <Form.Group as={Row}>\r\n//     <Form.Label htmlFor={props.htFor} className={props.style}>{props.txtBoxLabel}</Form.Label>\r\n//     <Col>\r\n//         <Form.Control type={props.txtBoxType}  id={props.txtBoxID}\r\n//          placeholder={props.txtBoxPH} \r\n//          value={props.txtBoxValue}\r\n//          onChange={props.changeEvent}\r\n//          pattern={props.txtBoxPattern}\r\n//          name={props.txtBoxName}\r\n//          ref={props.txtRef}\r\n//          accept={props.accept}\r\n//          required\r\n//          />\r\n//     </Col>\r\n// </Form.Group>\r\n    )\r\n}\r\n\r\nexport default CustomTextBox;\r\n{/* <CustomTextBox\r\n                            style = \"\"\r\n                            txtBoxLabel =\"\"\r\n                            txtBoxType =\"\"\r\n                            txtBoxName = \"\"\r\n                            txtBoxValue = \"\"\r\n                            txtBoxID = \"\"\r\n                            txtBoxPH =\"\"\r\n                            changeEvent = \"\"\r\n                            /> */}\r\n","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\Routes.js",[],"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Sidebar.js",["56","57","58","59","60","61","62","63","64"],"C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Header.js",["65","66"],"import React, { Component } from 'react'\r\nimport {\r\n    Image,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport Logo from '../logo-light.png'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    \r\n                        <div className=\"custom-header\" style={{width:\"180px\"}} >\r\n                           <div className=\"header-img\">\r\n                                <Image src={Logo}   ></Image>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"header-text\">\r\n                            \r\n                                In a world of gray, CCM provides clarity to all construction & facility projects.\r\n                \r\n                        </div>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\DIGISAILOR\\ccm-dev\\src\\components\\Dashboard.js",["67","68","69","70","71","72","73","74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":54,"column":15,"nodeType":"82","messageId":"83","endLine":54,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":82,"column":29,"nodeType":"88","endLine":82,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":92,"column":29,"nodeType":"88","endLine":92,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":114,"column":29,"nodeType":"88","endLine":114,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":144,"column":29,"nodeType":"88","endLine":144,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":154,"column":29,"nodeType":"88","endLine":154,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":164,"column":29,"nodeType":"88","endLine":164,"endColumn":39},{"ruleId":"80","severity":1,"message":"89","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":41,"column":1,"nodeType":"92","messageId":"93","endLine":50,"endColumn":35},{"ruleId":"80","severity":1,"message":"89","line":3,"column":5,"nodeType":"82","messageId":"83","endLine":3,"endColumn":8},{"ruleId":"80","severity":1,"message":"94","line":4,"column":5,"nodeType":"82","messageId":"83","endLine":4,"endColumn":8},{"ruleId":"80","severity":1,"message":"95","line":5,"column":5,"nodeType":"82","messageId":"83","endLine":5,"endColumn":11},{"ruleId":"80","severity":1,"message":"96","line":6,"column":5,"nodeType":"82","messageId":"83","endLine":6,"endColumn":8},{"ruleId":"80","severity":1,"message":"97","line":7,"column":5,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"98","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":9},{"ruleId":"80","severity":1,"message":"99","line":9,"column":5,"nodeType":"82","messageId":"83","endLine":9,"endColumn":11},{"ruleId":"80","severity":1,"message":"100","line":10,"column":5,"nodeType":"82","messageId":"83","endLine":10,"endColumn":16},{"ruleId":"80","severity":1,"message":"101","line":11,"column":5,"nodeType":"82","messageId":"83","endLine":11,"endColumn":10},{"ruleId":"80","severity":1,"message":"89","line":4,"column":5,"nodeType":"82","messageId":"83","endLine":4,"endColumn":8},{"ruleId":"80","severity":1,"message":"94","line":5,"column":5,"nodeType":"82","messageId":"83","endLine":5,"endColumn":8},{"ruleId":"80","severity":1,"message":"99","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":11},{"ruleId":"80","severity":1,"message":"101","line":9,"column":5,"nodeType":"82","messageId":"83","endLine":9,"endColumn":10},{"ruleId":"80","severity":1,"message":"102","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":21},{"ruleId":"80","severity":1,"message":"103","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":12},{"ruleId":"80","severity":1,"message":"104","line":13,"column":8,"nodeType":"82","messageId":"83","endLine":13,"endColumn":9},{"ruleId":"80","severity":1,"message":"105","line":14,"column":8,"nodeType":"82","messageId":"83","endLine":14,"endColumn":12},{"ruleId":"80","severity":1,"message":"106","line":30,"column":16,"nodeType":"82","messageId":"83","endLine":30,"endColumn":25},{"ruleId":"80","severity":1,"message":"107","line":30,"column":26,"nodeType":"82","messageId":"83","endLine":30,"endColumn":33},{"ruleId":"80","severity":1,"message":"108","line":30,"column":34,"nodeType":"82","messageId":"83","endLine":30,"endColumn":46},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'condition' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'Row' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Col' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Image' is defined but never used.","'CustomTextBox' is defined but never used.","'Logo' is defined but never used.","'$' is defined but never used.","'swal' is defined but never used.","'Date_From' is assigned a value but never used.","'Date_To' is assigned a value but never used.","'select_month' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]