[{"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\index.js":"1","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\App.js":"2","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\reportWebVitals.js":"3","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Profile.js":"4","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Logout.js":"5","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Navbar.js":"6","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\Utilities.js":"7","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Invoice.js":"8","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\axiosinstance.js":"9","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\QuotationList.js":"10","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\AddQuotation.js":"11","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\main.js":"12","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\BarChart.js":"13","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\ChartCard.js":"14","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\Top5.js":"15","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\Sidebar.js":"16","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\ChartData.js":"17","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\client\\AddClient.js":"18","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\client\\ClientList.js":"19","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\contractor\\Addcontractor.js":"20","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\contractor\\Contractorlist.js":"21","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\user\\AddUser.js":"22","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\user\\UserList.js":"23","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\AddInvoice.js":"24","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\AddCountry.js":"25","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Login.js":"26","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\landingPage\\LandingPage.js":"27","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\landingPage\\CountryFlags.js":"28","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Forgotpassword.js":"29","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\Button.js":"30","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\TextBox.js":"31","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Routes.js":"32"},{"size":597,"mtime":1613453825755,"results":"33","hashOfConfig":"34"},{"size":237,"mtime":1616832059414,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1609566036929,"results":"36","hashOfConfig":"34"},{"size":6823,"mtime":1616847899652,"results":"37","hashOfConfig":"34"},{"size":741,"mtime":1617082812042,"results":"38","hashOfConfig":"34"},{"size":6092,"mtime":1617265306893,"results":"39","hashOfConfig":"34"},{"size":170,"mtime":1616494183241,"results":"40","hashOfConfig":"34"},{"size":1823,"mtime":1617272391508,"results":"41","hashOfConfig":"34"},{"size":427,"mtime":1616495848273,"results":"42","hashOfConfig":"34"},{"size":8233,"mtime":1617272760663,"results":"43","hashOfConfig":"34"},{"size":27695,"mtime":1617437623337,"results":"44","hashOfConfig":"34"},{"size":6271,"mtime":1616825526119,"results":"45","hashOfConfig":"34"},{"size":1737,"mtime":1616758969519,"results":"46","hashOfConfig":"34"},{"size":4859,"mtime":1616825088692,"results":"47","hashOfConfig":"34"},{"size":1084,"mtime":1616999291910,"results":"48","hashOfConfig":"34"},{"size":1079,"mtime":1617257187736,"results":"49","hashOfConfig":"34"},{"size":2884,"mtime":1617257195847,"results":"50","hashOfConfig":"34"},{"size":11526,"mtime":1617437857290,"results":"51","hashOfConfig":"34"},{"size":8001,"mtime":1617436933490,"results":"52","hashOfConfig":"34"},{"size":9762,"mtime":1616847057093,"results":"53","hashOfConfig":"34"},{"size":9195,"mtime":1617437345357,"results":"54","hashOfConfig":"34"},{"size":19612,"mtime":1616849636100,"results":"55","hashOfConfig":"34"},{"size":9464,"mtime":1617437115838,"results":"56","hashOfConfig":"34"},{"size":9722,"mtime":1617431669048,"results":"57","hashOfConfig":"34"},{"size":7341,"mtime":1616829088628,"results":"58","hashOfConfig":"34"},{"size":4983,"mtime":1616994509852,"results":"59","hashOfConfig":"34"},{"size":4495,"mtime":1616829624634,"results":"60","hashOfConfig":"34"},{"size":729,"mtime":1616827615319,"results":"61","hashOfConfig":"34"},{"size":5120,"mtime":1616844720710,"results":"62","hashOfConfig":"34"},{"size":382,"mtime":1616828405473,"results":"63","hashOfConfig":"34"},{"size":615,"mtime":1616830629284,"results":"64","hashOfConfig":"34"},{"size":4161,"mtime":1617265462637,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1lbwp6k",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"68"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\index.js",[],["150","151"],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\App.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\reportWebVitals.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Profile.js",["152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport CustomTextBox from './utils/TextBox'\r\nimport Logo from '../components/img/logo-light.png'\r\nimport swal from 'sweetalert'\r\nimport { Link } from 'react-router-dom'\r\nimport Forgotpassword from './auth/Forgotpassword'\r\n\r\n\r\nexport class Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            full_name: '',\r\n            user_name: '',\r\n            country: '',\r\n            email: '',\r\n            email: '',\r\n            department: '',\r\n            password: '',\r\n            address: '',\r\n            mobile: '',\r\n            resetPassword:false,\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { full_name, user_name, country, password, confirm_password, email, user_type, position, } = this.state;\r\n    }\r\n    setPassword =()=>{\r\n        this.setState({ resetPassword: !this.state.resetPassword  })\r\n    }\r\n\r\n    render() {\r\n        const { full_name, user_name, country, email, department, password, address, mobile, resetPassword } = this.state;\r\n        return (\r\n            <div>\r\n                {resetPassword ? <Forgotpassword Back={this.setPassword} /> :\r\n                <div className=\"component\">\r\n                    <Card style={{ marginTop: \"30px\" }} >\r\n                        <Row  >\r\n                            <Col lg={3} style={{ marginTop: '100px' }}>\r\n                                <Image src={Logo} className=\"profile-img\" ></Image>\r\n                            </Col>\r\n\r\n                            <Col lg={4} >\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Full name\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"full_name\"\r\n                                    txtBoxValue={full_name}\r\n                                    txtBoxPH=\"Full Name\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"User name\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"user_name\"\r\n                                    txtBoxValue={user_name}\r\n                                    txtBoxPH=\"User Name\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                                <Form.Group >\r\n                                    <Form.Label >Country</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"country\" value={country} onChange={this.onChange} required>\r\n                                        <option value=\"\" disabled>Select Country</option>\r\n                                        <option value=\"Country 1\">Country 1</option>\r\n                                        <option value=\"Country 2\">Country 2</option>\r\n                                        <option value=\"Country 3\">Country 3 </option>\r\n                                        <option value=\"Country 4\">Country 4</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Email\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"email\"\r\n                                    txtBoxValue={email}\r\n                                    txtBoxPH=\"Email\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n\r\n                            {/* 2cond col */}\r\n\r\n                            <Col lg={4} >\r\n                                <Form.Group >\r\n                                    <Form.Label >Department</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"department\" value={department} onChange={this.onChange} required>\r\n                                        <option value=\"\" selected disabled> Plumping</option>\r\n                                        <option value=\"Admin\">department 2</option>\r\n                                        <option value=\"User\">department 3</option>\r\n                                        <option value=\"Admin\">department 4</option>\r\n                                        <option value=\"User\">department 5</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\" Password\"\r\n                                    txtBoxType=\"password\"\r\n                                    txtBoxName=\"password\"\r\n                                    txtBoxValue={password}\r\n                                    txtBoxID=\"password\"\r\n                                    txtBoxPH=\"********\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Address\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"address\"\r\n                                    txtBoxValue={address}\r\n                                    txtBoxID=\"address\"\r\n                                    txtBoxPH=\"Address\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Phone Number\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"mobile\"\r\n                                    txtBoxValue={mobile}\r\n                                    txtBoxID=\"mobile\"\r\n                                    txtBoxPH=\"mobile\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='d-flex justify-content-end' style={{ marginTop: \"3%\" }} >\r\n                                <Button onClick={this.setPassword} >Reset Password</Button>\r\n                                <Button onClick={this.onSubmit}>Save</Button>\r\n                        </Row>\r\n                    </Card>\r\n                </div>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Logout.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Navbar.js",["164","165","166","167","168","169","170","171","172"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from './img/logo-light.png';\r\nimport {\r\n  Image,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n  NavDropdown\r\n} from 'react-bootstrap'\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const iconStyle = {\r\n    fontSize: '1.1em',\r\n    marginRight: '10px',\r\n    color: '#6B6969'\r\n  }\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Image src={Logo} style={{ marginLeft: \"30px\", position: 'relative', bottom: '30px' }} />\r\n\r\n      <Link to=\"/cwr-summary\" className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>\r\n        <i class=\"fa fa-server\" style={iconStyle} aria-hidden=\"true\"></i> CWR summary\r\n        </Link>\r\n      <Link to=\"/dashboard\" className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>\r\n      <i class=\"fa fa-bars\"  style={iconStyle} aria-hidden=\"true\"></i>  Dashboard\r\n      </Link>\r\n      <Link to=\"/profile\" className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>\r\n        <i class=\"fa fa-user-circle\" style={iconStyle} aria-hidden=\"true\"></i> My Profile\r\n      </Link>\r\n      <div >\r\n        <div className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>\r\n          <i className=\"fa fa-cog \" style={iconStyle} aria-hidden=\"true\"></i> Administration\r\n        </div>\r\n        <div style={{ marginLeft: '40px' }}>\r\n          <Link to=\"/user-list\" className=\"nav-link\" style={{ fontSize: \"1em\" }}> User </Link>\r\n          <Link to=\"/client-list\" className=\"nav-link\" style={{ fontSize: \"1em\" }}> Client </Link>\r\n          <Link to=\"/contractor-list\" className=\"nav-link\" style={{ fontSize: \"1em\" }}> Contractor </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/country\" className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>\r\n        <i class=\"fa fa-globe\" style={iconStyle} aria-hidden=\"true\"></i> Add Country\r\n      </Link>\r\n      <Link to=\"/addinvoice\" className=\"nav-link w3-bar-item\" style={{ fontSize: \"1.1em\" }}>Invoice</Link>\r\n\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ backgroundColor: \"rgb(58,95,133)\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <i class='fas fa-bars' />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ marginRight: '40px' }} noWrap>\r\n            In a world of gray, CCM provides clarity to all construction & facility projects.\r\n          </Typography>\r\n          <Typography style={{ fontSize: '2em' }} noWrap>\r\n            <Link id=\"link-button\" to='/logout'><i style={{ marginRight: '20px' }} class='fas fa-times-circle' /></Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\Utilities.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Invoice.js",["173","174","175","176","177","178","179","180"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    Table,\r\n} from 'react-bootstrap';\r\n\r\nclass Invoice extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n           \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n          <tr className={this.props.id % 2 === 0 ? \"rowtable\":\"\"}>\r\n              \r\n            <th>INVOICE NUMBER</th>\r\n            <th>DATE ISSUED</th>\r\n            <th>CLIENT</th>\r\n            <th>DESCRIPTION</th>\r\n            <th>INVOICE AMOUNT</th>\r\n            <th>QUOTE APPROVAL</th>\r\n\r\n          </tr>\r\n           <tr className={this.props.id % 2 === 0 ? \"rowtable\":\"\"}>   \r\n           <td>123456778</td>\r\n           <td>12/03/2020</td>\r\n           <td>boruto</td>\r\n           <td>Description </td>\r\n           <td>87697</td>\r\n           <td>pending</td>\r\n         </tr>\r\n\r\n         <tr className={this.props.id % 2 === 0 ? \"rowtable\":\"\"}>   \r\n           <td>123456778</td>\r\n           <td>12/03/2020</td>\r\n           <td>boruto</td>\r\n           <td>Description </td>\r\n           <td>87697</td>\r\n           <td>pending</td>\r\n         </tr>\r\n\r\n         <tr className={this.props.id % 2 === 0 ? \"rowtable\":\"\"}>   \r\n           <td>123456778</td>\r\n           <td>12/03/2020</td>\r\n           <td>boruto</td>\r\n           <td>Description </td>\r\n           <td>87697</td>\r\n           <td>pending</td>\r\n         </tr>\r\n\r\n         <tr className={this.props.id % 2 === 0 ? \"rowtable\":\"\"}>   \r\n           <td>123456778</td>\r\n           <td>12/03/2020</td>\r\n           <td>boruto</td>\r\n           <td>Description </td>\r\n           <td>87697</td>\r\n           <td>pending</td>\r\n         </tr>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Invoice\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\axiosinstance.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\QuotationList.js",["181","182","183","184","185","186","187","188","189"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    Table,\r\n    InputGroup,\r\n    FormControl,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../../utils/axiosinstance'\r\nimport axios from 'axios'\r\nimport Invoice from '../../Invoice'\r\nimport DatePicker from \"react-datepicker\";\r\nimport AddQuotation from './AddQuotation'\r\n\r\nvar token = localStorage.getItem('access_token')\r\n\r\nexport default class quotation_list extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            emailSearch: '',\r\n            countrySearch: '',\r\n            fromDate: '',\r\n            toDate: '',\r\n            status: '',\r\n\r\n            visible: false,\r\n            visible_key: null,\r\n            addQuotation: false,\r\n            country_list: [],\r\n            quotation_list: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance.post(`/country/list`)\r\n            .then((res) => {\r\n                const country_list = res.data.response.country_list\r\n                this.setState({ country_list })\r\n                console.log(country_list)\r\n            })\r\n        axios.get(`http://www.json-generator.com/api/json/get/cePWspeKMi?indent=2`)\r\n            .then(res => {\r\n                console.log(res.data, \"response\")\r\n                this.setState({ quotation_list: res.data })\r\n            })\r\n        // axiosInstance.post(`/quotation/list`)\r\n        //     .then(res => {\r\n        //         const quotation_list = res.data.response.quotation_list\r\n        //         console.log(quotation_list, \"response\")\r\n        //         this.setState({ quotation_list })\r\n        //     })\r\n    }\r\n    invoice = (e) => {\r\n        console.log(e)\r\n        this.setState({\r\n            visible: !this.state.visible,\r\n            visible_key: e\r\n        })\r\n    }\r\n\r\n    renderTable = (quotation) => {\r\n        return (\r\n            <>\r\n                <tr key={quotation.quotationNo} className={quotation.id % 2 === 0 ? \"rowtable\" : \"\"} onClick={() => this.invoice(quotation.id)} style={{ height: \"50px\", padding: \"10px\" }}>\r\n                    <td  >{quotation.quotationNo}</td>\r\n                    <td >{quotation.quotationDate}</td>\r\n                    <td >{quotation.client}</td>\r\n                    <td >{quotation.description}</td>\r\n                    <td >{quotation.quoteAmount}</td>\r\n                    <td >{quotation.quotationStatus}</td>\r\n                    <td >{quotation.clientPO}</td>\r\n                    <td >{quotation.margin}</td>\r\n                    <td >{quotation.marginAmount}</td>\r\n                    <td >{quotation.ticketNo}</td>\r\n                    <td >{quotation.jobComplete}</td>\r\n\r\n                </tr>\r\n                { this.state.visible && this.state.visible_key == quotation.quotationNo && <Invoice id={quotation.quotationNo} />}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    onChange= (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    setDate = (date, name) => {\r\n        this.setState({\r\n            [name]: date\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { quotation_list, country_list, emailSearch, countrySearch, fromDate, toDate, status, } = this.state\r\n        return (\r\n            <div>\r\n                {/* {addQuotation ? <AddQuotation /> : */}\r\n                <div className=\"component\">\r\n                    <Card style={{ marginTop: \"30px\" }} >\r\n                        <Row  >\r\n                            <Col lg={3}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name='emailSearch'\r\n                                    placeholder=\"Enter email\"\r\n                                    value={emailSearch}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <button className='iconButtton' >\r\n                                    <i className=\"fa fa-search\" onClick={this.onSearch} ></i>\r\n                                </button><br />\r\n                            </Col>\r\n                            <Col lg={2}>\r\n                                <Form.Control as='select' value={countrySearch} name=\"countrySearch\" onChange={this.onChange} >\r\n                                    <option value='' >Select Country</option>\r\n                                    {country_list.map(country => <option key={country.id} value={country.id} > {country.name} </option>)}\r\n                                </Form.Control><br />\r\n                                <button className='iconButtton' style={{ bottom: '55px' }} >\r\n                                    <i className=\"fa fa-angle-right\" style={{ fontSize: '25px' }} onClick={this.onSearch} ></i>\r\n                                </button><br />\r\n                            </Col>\r\n                            <Col lg={2}>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"fromDate\"\r\n                                    value={fromDate}\r\n                                    onChange={this.onChange}\r\n                                /><br />\r\n                            </Col>\r\n                            <Col lg={2}>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"toDate\"\r\n                                    value={toDate}\r\n                                    onChange={this.onChange}\r\n                                /><br />\r\n                            </Col>\r\n                            <Col lg={2}>\r\n                                <Form.Control as='select' value={status} name=\"status\" onChange={this.onChange} >\r\n                                    <option value='' disabled selected>Status</option>\r\n                                    <option value='pending'>Pending</option>\r\n                                    <option value='completed'>Completed</option>\r\n                                    <option value='cancel'>Cancel</option>\r\n                                </Form.Control><br />\r\n                            </Col>\r\n                            <Col lg={1}>\r\n                                <Link to='/addQuotation' ><button className='addIcon' >\r\n                                    <i className=\"fa fa-plus\" style={{ fontSize: \"20px\", color: \"white\" }}></i>\r\n                                </button>\r\n                                </Link>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Card>\r\n                    <Card style={{ marginTop: \"30px\", backgroundColor: \"white\" }}>\r\n                        <Row>\r\n                            <Table style={{ backgroundColor: \"white\" }} responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th >QUOTATION NUMBER</th>\r\n                                        <th >DATE ISSUED</th>\r\n                                        <th >CLIENT</th>\r\n                                        <th >DESCRIPTION</th>\r\n                                        <th >QUOTE AMOUNT</th>\r\n                                        <th >QUOTE APPROVAL</th>\r\n                                        <th>CLIENT PO</th>\r\n                                        <th>MARGIN %</th>\r\n                                        <th>MARGIN AMOUNT</th>\r\n                                        <th>CCM TICKET NO</th>\r\n                                        <th>JOB COMPLETE</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {quotation_list.map(this.renderTable)}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const renderInvoice = () => {\r\n//     return (\r\n//         <Card>\r\n\r\n//         </Card>\r\n//     )\r\n// }\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\AddQuotation.js",["190","191","192","193","194","195","196","197","198"],"import React, { Component } from 'react'\r\nimport { Card, Container, Row, Col, Form, } from 'react-bootstrap'\r\nimport CustomTextBox from '../../utils/TextBox'\r\nimport CustomButton from '../../utils/Button'\r\nimport Swal from 'sweetalert2';\r\nimport axiosInstance from '../../utils/axiosinstance'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nexport class AddQuotation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            category: '',\r\n            quotation_num: '',\r\n            quotationDate: '',\r\n            client_id: '',\r\n            quoteAmount: '',\r\n            description: '',\r\n            quotationStatus: '',\r\n            clientPO: '',\r\n            margin: '',\r\n            marginAmount: '',\r\n            clientInvoiceNo: '',\r\n            clientIVamount: '',\r\n            InvoiceIssuedDate: '',\r\n            paymentReceivedDate: '',\r\n            receivedAmount: '',\r\n            invoiceCredit: false,\r\n            creditNotes: '',\r\n            creditIssuedDate: '',\r\n            creditAmount: '',\r\n            workCommence: '',\r\n            workComplete: '',\r\n            cont_id: '',\r\n            contractorPO: '',\r\n            purchace_order: '',\r\n            PO_amount: '',\r\n            PO_date: '',\r\n            vendorInvoiceNo: '',\r\n            vendorInvoiceAmount: '',\r\n            vendorInvoiceReceived: '',\r\n            paidAmount: '',\r\n            paidDate: '',\r\n            tax: '',\r\n            jobComplete: '',\r\n            ticketNo: '',\r\n\r\n            client_list:[],\r\n            contractor_list: [],\r\n            client_invoice: [],\r\n            contractor_invoice:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance.post(`/client/list`)\r\n            .then(res => {\r\n                const client_list = res.data.response.client_list\r\n                this.setState({ client_list })\r\n                console.log(client_list);\r\n            })\r\n        axiosInstance.post(`/contractor/list`)\r\n            .then(res => {\r\n                const contractor_list = res.data.response.contractor_list\r\n                this.setState({ contractor_list })\r\n                console.log(contractor_list);\r\n            })\r\n        axiosInstance.post(`/invoice/list`)\r\n            .then(res => {\r\n                const invoice_list = res.data.response.invoice_list\r\n                this.setState({ \r\n                    client_invoice:invoice_list.filter(invoice=> invoice.cust_type==='1'),\r\n                    contractor_invoice:invoice_list.filter(invoice=> invoice.cust_type==='2') \r\n                })\r\n            })\r\n            axiosInstance.post(`/quotation/list`)\r\n            .then(res => {\r\n                const quotation_list = res.data.response.quotation_list\r\n                this.setState({ quotation_list })\r\n                console.log(quotation_list, 'quotation_list');\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    checkboxChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.checked })\r\n    }\r\n    onChangeAmount = (values, name) => {\r\n        const { formattedValue, value } = values;\r\n        this.setState({ [name]: value })\r\n    }\r\n    autoComplete = (e, value, name) => {\r\n        console.log(e,value)\r\n         value !== null && this.setState({ [name]: value[name], })\r\n    }\r\n    onSubmit = (e) => {\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { category, quotation_num, quotationDate, client, quoteAmount, description, quotationStatus, clientPO, margin, marginAmount,\r\n            clientInvoiceNo, clientIVamount, InvoiceIssuedDate, paymentReceivedDate, receivedAmount, invoiceCredit, creditNotes, creditIssuedDate, creditAmount, workCommence, workComplete, contractorName, contractorPO, purchace_order, PO_amount, PO_date, vendorInvoiceNo,\r\n            vendorInvoiceAmount, vendorInvoiceReceived, paidAmount, paidDate, tax, jobComplete, ticketNo,\r\n            quotation_list,client_list,contractor_list,contractor_invoice,client_invoice} = this.state;\r\n        const categoryList = ['Categories Selection', 'FM Contract', 'Interior & General', 'Electrical', 'HVAC System', 'Plumping & Pest', 'Fire Protection', 'AV system', 'IT & Security', 'Carpentry Works', 'Furniture & Rugs', 'Additional Works']\r\n        console.log(client_invoice,contractor_invoice)\r\n        return (\r\n            <div>\r\n                <div className=\"component\">\r\n                    <Row>\r\n                        <Col>\r\n                            <p style={{ fontSize: \"20px\" }}>Add Quotation</p>\r\n                        </Col>\r\n                        <Col className='d-flex justify-content-end'>\r\n                            <select className='select' name=\"category\" value={category} onChange={this.onChange} >\r\n                                {categoryList.map(category => <option value={category} > {category}</option>)}\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Card>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                            <Form.Group >\r\n                                    <Form.Label > Quotation No</Form.Label>\r\n                                    <Autocomplete\r\n                                        options={quotation_list}   \r\n                                        onChange={(e, value) =>value !== null ? this.setState({quotation_num : value.quotation_num}) :this.setState({quotation_num : ''})}\r\n                                        getOptionLabel={(option) => option.quotation_num}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Quotation No' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                            <Form.Group >\r\n                                    <Form.Label > Client</Form.Label>\r\n                                    <Autocomplete\r\n                                        options={client_list}   \r\n                                        onChange={(e, value) =>value !== null ? this.setState({client_id : value.id}): this.setState({client_id : ''}) }\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Client Name' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <Form.Label >Quote Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={quoteAmount}\r\n                                        placeholder=\"Amount\"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'quoteAmount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Client PO\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"clientPO\"\r\n                                    txtBoxValue={clientPO}\r\n                                    txtBoxPH=\" Client PO\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Date Issued\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"quotationDate\"\r\n                                    txtBoxValue={quotationDate}\r\n                                    txtBoxPH=\"Price Amount\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Description\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"description\"\r\n                                    txtBoxValue={description}\r\n                                    txtBoxPH=\"Description\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n\r\n\r\n                            <Col lg={3}>\r\n                                <Form.Group >\r\n                                    <Form.Label >Quote Approval</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"quotationStatus\" value={quotationStatus} onChange={this.onChange}>\r\n                                        <option value=\"\" disabled>Quote Approval</option>\r\n                                        <option value=\"approved\">Approved</option>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"completed\">Completed</option>\r\n                                        <option value=\"cancel\">Cancel</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={1} >\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Margin\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"margin\"\r\n                                    txtBoxValue={margin}\r\n                                    txtBoxPH=\"%\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={2} >\r\n                                <CurrencyFormat\r\n                                    className='form-control'\r\n                                    placeholder=\"Amount\"\r\n                                    value={marginAmount}\r\n                                    onValueChange={(values) => this.onChangeAmount(values, 'marginAmount')}\r\n                                    thousandSeparator={true}\r\n                                    style={{ marginTop: \"47px\" }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Card style={{ marginTop: '15px', }} >\r\n                        <Row>\r\n\r\n                            <Col lg={3}>\r\n                                <Form.Group >\r\n                                    <Form.Label > Client Invoice No</Form.Label>\r\n                                    <Autocomplete\r\n                                        options={client_invoice}   \r\n                                        onChange={(e, value) => value !== null ? this.setState({clientInvoiceNo : value.num}):this.setState({clientInvoiceNo : ''})  }\r\n                                        getOptionLabel={(option) => option.id}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Invoice No' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <Form.Label >Client Invoice Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={clientIVamount}\r\n                                        placeholder=\"Client Invoice Amount\"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'clientIVamount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Invoice Issued Date\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"InvoiceIssuedDate\"\r\n                                    txtBoxValue={InvoiceIssuedDate}\r\n                                    txtBoxPH=\"Commense\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Payment Received Date\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"paymentReceivedDate\"\r\n                                    txtBoxValue={paymentReceivedDate}\r\n                                    txtBoxPH=\"Commense\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <Form.Label >Received Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={receivedAmount}\r\n                                        placeholder=\"Received Amount\"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'receivedAmount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3} style={{ marginTop: '40px' }}>\r\n                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                    <Form.Check\r\n                                        style={{ fontSize: '1.3em', fontWeight: 'bold' }}\r\n                                        name='invoiceCredit'\r\n                                        checked={invoiceCredit}\r\n                                        type=\"checkbox\"\r\n                                        label=\"Is Credit Available ?\"\r\n                                        onChange={this.checkboxChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        {invoiceCredit &&\r\n                            <Row>\r\n                                <Col lg={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Credit Amount</Form.Label>\r\n                                        <CurrencyFormat\r\n                                            className='form-control'\r\n                                            value={creditAmount}\r\n                                            placeholder=\"Credit Amount\"\r\n                                            onValueChange={(values) => this.onChangeAmount(values, 'creditAmount')}\r\n                                            thousandSeparator={true} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <CustomTextBox\r\n                                        txtBoxLabel=\"Credit Issued Date\"\r\n                                        txtBoxType=\"date\"\r\n                                        txtBoxName=\"creditIssuedDate\"\r\n                                        txtBoxValue={creditIssuedDate}\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <CustomTextBox\r\n                                        txtBoxLabel=\"Credit Note\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"creditNotes\"\r\n                                        txtBoxValue={creditNotes}\r\n                                        txtBoxPH=\"Notes\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                </Col>\r\n                            </Row>}\r\n                    </Card>\r\n                    <Card style={{ marginTop: '15px', }} >\r\n                        <Row>\r\n                            <Col lg={3} >\r\n                                <Form.Group >\r\n                                    <Form.Label > Contractor Name</Form.Label>\r\n                                    <Autocomplete\r\n                                        options={contractor_list}   \r\n                                        onChange={(e, value) => value !== null ? this.setState({cont_id : value.id}) : this.setState({cont_id : ''}) }\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Contractor Name' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col lg={3} >\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"PO Number\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"contractorPO\"\r\n                                    txtBoxValue={contractorPO}\r\n                                    txtBoxPH=\"Purchase Order\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3} >\r\n                                <Form.Group>\r\n                                    <Form.Label >PO Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={PO_amount}\r\n                                        placeholder=\" Amount \"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'PO_amount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3} >\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"PO Issued Date\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"PO_date\"\r\n                                    txtBoxValue={PO_date}\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Work Commence\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"workCommence\"\r\n                                    txtBoxValue={workCommence}\r\n                                    txtBoxPH=\"Commense\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Work Complete\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"workComplete\"\r\n                                    txtBoxValue={workComplete}\r\n                                    txtBoxPH=\"workComplete\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Card style={{ marginTop: '15px' }}>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                            <Form.Group >\r\n                                    <Form.Label > Contractor Invoice No</Form.Label>\r\n                                    <Autocomplete\r\n                                        options={contractor_invoice}   \r\n                                        onChange={(e, value) => value !== null ? this.setState({vendorInvoiceNo : value.num}) : this.setState({vendorInvoiceNo : ''}) }\r\n                                        getOptionLabel={(option) => option.num}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Invoice No' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <Form.Label >Contractor Invoice Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={vendorInvoiceAmount}\r\n                                        placeholder=\" Amount \"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'vendorInvoiceAmount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Invoice Received Date\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"vendorInvoiceReceived\"\r\n                                    txtBoxValue={vendorInvoiceReceived}\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Tax Invoice No\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"tax\"\r\n                                    txtBoxValue={tax}\r\n                                    txtBoxPH=\"\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <Form.Label >Paid Amount</Form.Label>\r\n                                    <CurrencyFormat\r\n                                        className='form-control'\r\n                                        value={paidAmount}\r\n                                        placeholder=\" Amount \"\r\n                                        onValueChange={(values) => this.onChangeAmount(values, 'paidAmount')}\r\n                                        thousandSeparator={true} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <Form.Group>\r\n                                    <CustomTextBox\r\n                                        txtBoxLabel=\"Paid Date\"\r\n                                        txtBoxType=\"date\"\r\n                                        txtBoxName=\"paidDate\"\r\n                                        txtBoxValue={paidDate}\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Card>\r\n                    <Card style={{ marginTop: '15px', backgroundColor: '#C0BFBF' }}>\r\n                        <Row>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"CCM Ticket Number\"\r\n                                    txtBoxType=\"text\"\r\n                                    txtBoxName=\"ticketNo\"\r\n                                    txtBoxValue={ticketNo}\r\n                                    txtBoxPH=\"\"\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                            <Col lg={3}>\r\n                                <CustomTextBox\r\n                                    txtBoxLabel=\"Job Complete\"\r\n                                    txtBoxType=\"date\"\r\n                                    txtBoxName=\"jobComplete\"\r\n                                    txtBoxValue={jobComplete}\r\n                                    changeEvent={this.onChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Row className='d-flex justify-content-end' style={{ marginTop: '20px' }}>\r\n                        <CustomButton btnType=\"reset\" BtnTxt=\"Complete\" ClickEvent={this.onComplete} />\r\n                        <CustomButton btnType=\"reset\" BtnTxt=\"Submit\" ClickEvent={this.onSubmit} />\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddQuotation\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\main.js",["199","200"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    InputGroup,\r\n    FormControl\r\n} from 'react-bootstrap';\r\nimport ChartCard from './ChartCard'\r\nimport BarChart from './BarChart'\r\nimport Sidebar from './Sidebar'\r\nimport Top5 from './Top5'\r\nimport axiosInstance from '../../utils/axiosinstance'\r\n\r\nexport class main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            country: '',\r\n            currency: '', \r\n            client: '',\r\n            contractor: '',\r\n            country_list: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axiosInstance.post(`/country/list`)\r\n            .then((res) => {\r\n                const country_list = res.data.response.country_list\r\n                this.setState({ country_list })\r\n                console.log(country_list)\r\n            })\r\n    }\r\n    onChange = (e)=>{\r\n        this.setState({ [e.target.name] : e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { country, currency, client,contractor, country_list } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"component\">\r\n                    <h4> DASHBOARD </h4>\r\n                    <Card style={{ marginTop: \"2%\" }}>\r\n                        <Row >\r\n                            <Col lg='2'>\r\n                                <Form.Control as='select' value={country} name=\"country\" onChange={this.onChange} style={{padding:'5px 10px'}} >\r\n                                    <option value='' > Country</option>\r\n                                    {country_list.map(country =>\r\n                                        <option key={country.id} value={country.id} > {country.name} </option>\r\n                                    )}\r\n                                </Form.Control><br />\r\n                                <button className='iconButtton' style={{ bottom: '50px', left:'80%' }} ><i className=\"fa fa-angle-right\"  onClick={this.onSearch} ></i></button><br />\r\n                            </Col>\r\n                            <Col lg='2'>\r\n                                <Form.Control as='select' value={currency} name=\"currency\" onChange={this.onChange} style={{padding:'5px 10px'}} >\r\n                                    <option value='' > Currency </option>\r\n                                    <option value='rupee' > Rupee </option>\r\n                                    <option value='dollar' > Dollar </option>\r\n                                    <option value='yuan' > Yuan </option>\r\n                                </Form.Control><br />\r\n                                <button className='iconButtton' style={{ bottom: '50px',left:'80%' }} ><i className=\"fa fa-angle-right\"  onClick={this.onSearch} ></i></button><br />\r\n                            </Col>\r\n                            <Col lg='4' >\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text style={{boxShadow:'1px 2px 6px #989898'}} >Client</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                        placeholder=\"Username\"\r\n                                        type='text'\r\n                                        name='client'\r\n                                        value={client}\r\n                                        onChange={this.onChange}\r\n                                        style={{padding:'0px 10px'}}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n                            <Col lg='4' >\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text style={{boxShadow:'1px 2px 6px #989898'}} >Contractor</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                        placeholder=\"Username\"\r\n                                        type='text'\r\n                                        name='contractor'\r\n                                        value={contractor}\r\n                                        onChange={this.onChange}\r\n                                        style={{padding:'0px 10px'}}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Card style={{ marginTop: \"2%\" }}>\r\n                        <h5> ACCOUNT STATEMENT </h5>\r\n                        <Row>\r\n                            <ChartCard text='CALENDAR' calender='true' />\r\n                            <ChartCard text='MONTHLY' />\r\n                            <ChartCard text='YEARLY' />\r\n                        </Row>\r\n                        <Row>\r\n                            <h5>MONTHLY STATEMENT PER YEAR</h5>\r\n                            <BarChart />\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xl='6'>\r\n                                <h5>AGED RECEIVABLES</h5>\r\n                                <Sidebar color='#438EEB' />\r\n                            </Col>\r\n                            <Col xl='6'>\r\n                                <h5>TOP 5 AGED RECEIVABLES</h5>\r\n                                <Top5 color='#438EEB' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xl='6'>\r\n                                <h5>AGED PAYABLES</h5>\r\n                                <Sidebar color='#FD7F59' />\r\n                            </Col>\r\n                            <Col xl='6'>\r\n                                <h5>TOP 5 AGED PAYABLES</h5>\r\n                                <Top5 color='#FD7F59' />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default main\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\BarChart.js",["201","202","203","204","205","206","207","208"],"import React, { Component } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Spinner,\r\n} from 'react-bootstrap';\r\nimport { BarOptions } from './ChartData'\r\n\r\nexport class BarChart extends Component {\r\n    render() {\r\n        const BarData = {\r\n            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'NOV', 'DEC'],\r\n            datasets: [\r\n                {\r\n                    label: 'Total',\r\n                    barThickness: 20,\r\n                    backgroundColor: '#9B9D9F',\r\n                    data: [2860, 2654, 2860, 2654, 2860, 2654, 2860, 2654, 2860, 2654, 2860, 2654,],\r\n                },\r\n                {\r\n                    label: 'Received',\r\n                    barThickness: 20,\r\n                    backgroundColor: '#438EEB',\r\n                    data: [3231, 3250, 3231, 3250, 3231, 3250, 3231, 3250, 3231, 3250, 3231, 3250,],\r\n                },\r\n                {\r\n                    label: 'Remaining',\r\n                    barThickness: 20,\r\n                    backgroundColor: '#FD7F59',\r\n                    data: [3640, 2466, 3640, 2466, 3640, 2466, 3640, 2466, 3640, 2466, 3640, 2466],\r\n                },\r\n            ]\r\n        };\r\n        const Options = BarOptions()\r\n        return (\r\n            <Col>\r\n                <Row className='chartCard'>\r\n                    <Col   style={{ maxHeight: '1300px', maxWidth: '1500px' }}>\r\n                    <Bar data={BarData} options={Options} height='110px' />\r\n                    </Col> \r\n                </Row>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarChart\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\ChartCard.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React, { Component } from 'react'\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Spinner,\r\n} from 'react-bootstrap';\r\nimport { PieOptions } from './ChartData'\r\n\r\nexport class ChartCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            fromDate: '',\r\n            toDate: '',\r\n            labels: [\"Total\", \"Received\", \"Remaining\"],\r\n            data: [36380000.00, 12380000.00, 24000000.00]\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    render() {\r\n        const { labels, data, fromDate, toDate } = this.state;\r\n        const dataset = {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    data: data,\r\n                    toolTipContent: \"{label}:${data}\",\r\n                    borderWidth: 1,\r\n                    backgroundColor: [\r\n                        '#9B9D9F',\r\n                        '#438EEB',\r\n                        '#FD7F59',\r\n                    ],\r\n                }],\r\n        }\r\n        const Options = PieOptions()\r\n        const button = {\r\n            border: 'none',\r\n            backgroundColor: \"#52AF66\",\r\n            color: 'white',\r\n            padding: '8px',\r\n        }\r\n        const label = {\r\n            paddingTop: '5px',\r\n        }\r\n        const labelAmount = {\r\n            paddingTop: '5px',\r\n            color: '#2A6BA4',\r\n        }\r\n        return (\r\n            <>\r\n                <Col xl='4'>\r\n                    {this.props.calender === 'true' ?\r\n                        <Row>\r\n                            <Col > <h6 style={{ marginTop: '10px' }}> {this.props.text}</h6> </Col>\r\n                            <Col lg='4'>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"fromDate\"\r\n                                    value={fromDate}\r\n                                    onChange={this.onChange}\r\n                                    style={{ boxShadow: 'none', border: 'none', borderBottom: '3px solid grey', }}\r\n                                /><br />\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"toDate\"\r\n                                    value={toDate}\r\n                                    onChange={this.onChange}\r\n                                    style={{ boxShadow: 'none', border: 'none', borderBottom: '3px solid grey', }}\r\n                                /><br />\r\n                            </Col>\r\n                        </Row> :\r\n                        <Row>\r\n                            <Col > <h6 style={{ marginTop: '38px' }}> {this.props.text}</h6> </Col>\r\n                        </Row>\r\n                    }\r\n\r\n\r\n                    <Row className='chartCard'>\r\n                        <Row>\r\n                            <Col sm='3'>\r\n                                <Col>\r\n                                    <label style={{ paddingTop: '5px', }} > TOTAL </label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <label style={{ paddingTop: '5px', }}> RECEIVED </label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <label style={{ paddingTop: '5px', }}> REMAINING </label>\r\n                                </Col>\r\n                            </Col>\r\n                            <Col sm={{ offset: '1', span: '5' }}>\r\n                                {data.map(data =>\r\n                                    <Col>\r\n                                        <label style={{ color: '#2A6BA4', paddingTop: '5px' }} > 36380000.00 </label>\r\n                                    </Col>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <div style={{ maxHeight: '500px', maxWidth: '500px' }}>\r\n                                <Pie data={dataset} options={Options} />\r\n                            </div>\r\n\r\n                            <div style={{ position: 'relative', bottom: '30px', left: '15%' }} >\r\n                                <h6 > Profit </h6>\r\n                                <button style={button} > 6546563 </button>\r\n                            </div>\r\n                        </Row>\r\n                    </Row>\r\n                </Col>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartCard\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\Top5.js",["220","221","222","223","224","225","226","227"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Spinner,\r\n    ListGroup,\r\n} from 'react-bootstrap';\r\n\r\nexport class Top5 extends Component {\r\n    render() {\r\n        const list = [1, 2, 3, 4, 5]\r\n        const amount = {\r\n            color:this.props.color\r\n        }\r\n        const label = {\r\n            padding: '11px 10px',\r\n            fontSize: '1.3em',\r\n        }\r\n        return (\r\n            <>\r\n            <Row className='chartCard' >\r\n                <ListGroup variant=\"flush\">\r\n                {list.map(data=>\r\n                    <ListGroup.Item style={label} >\r\n                        <Row>\r\n                            <Col lg='6' style={amount}> <h6> STEVE VAIN SPAIN </h6></Col>\r\n                            <Col lg='6' >11,200,000.00 </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>)}\r\n                    </ListGroup>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Top5\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\Sidebar.js",["228","229","230","231","232","233","234","235","236"],"import React, { Component } from 'react'\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Spinner,\r\n} from 'react-bootstrap';\r\nimport { SidebarOptions } from './ChartData'\r\n\r\nexport class Sidebar extends Component {\r\n    render() {\r\n        const Data = {\r\n            labels: ['0-30 DAYS', '30-60 DAYS', 'ABOVE 60 DAYS'],\r\n            datasets: [\r\n                {\r\n                    barThickness: 20,\r\n                    backgroundColor: this.props.color,\r\n                    data: [1910, 1740, 1490],\r\n                }\r\n            ]\r\n        };\r\n        const Options = SidebarOptions()\r\n        return (\r\n            <>\r\n                <Row className='chartCard' >\r\n                    <div style={{ maxHeight: '600px', maxWidth: '600px' }}>\r\n                        <HorizontalBar data={Data} options={Options} />\r\n                    </div>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\dashboard\\ChartData.js",["237"],"import Chart from 'chart.js'\r\n\r\nexport const PieOptions = ()=>{\r\n    return {\r\n        legend : pieLegend,\r\n        plugins : pluginsFalse,\r\n        tooltips : tooltips,\r\n    }\r\n}\r\nexport const BarOptions = ()=>{\r\n    return {\r\n        legend : barLegend,\r\n        plugins : pluginsTrue,\r\n        tooltips : tooltips,\r\n        scales : scales,\r\n    }\r\n}\r\nexport const SidebarOptions = ()=>{\r\n    return {\r\n        legend : {\r\n            display:false\r\n        },\r\n        plugins : Sidebarplugin,\r\n        tooltips : tooltips,\r\n        scales : scales,\r\n    }\r\n}\r\n\r\nconst tooltips = {\r\n    titleSpacing: 6,\r\n    xPadding: 20,\r\n    yPadding: 20,\r\n    titleFontSize: 15,\r\n    bodyFontSize: 20,\r\n    callbacks: {\r\n        title: function (tooltipItem, data) {\r\n            return data['labels'][tooltipItem[0]['index']];\r\n        },\r\n        label: function (tooltipItem, data) {\r\n            return data['datasets'][0]['data'][tooltipItem['index']];\r\n        },\r\n    },\r\n}\r\nconst scales= {\r\n    xAxes: [{\r\n        gridLines: {\r\n            display: false\r\n        },\r\n    }],\r\n    yAxes: [{\r\n        gridLines: {\r\n            display: false\r\n        },\r\n        ticks: {\r\n            beginAtZero: true,\r\n            fontSize: 15,\r\n            minimum: 20,\r\n        },\r\n    }]\r\n}\r\nconst pieLegend = {\r\n    position: 'left',\r\n    padding: 10,\r\n    labels: {\r\n        fontSize: 13,\r\n        fontColor: \"black\",\r\n    }\r\n}\r\nconst barLegend= {\r\n    labels: {\r\n        fontSize: 23,\r\n        boxWidth: 30,\r\n        fontFamily: 'Times New Roman',\r\n    }\r\n}\r\n\r\nconst pluginsFalse = {\r\n    datalabels: {\r\n        display: false\r\n    }\r\n}\r\nconst pluginsTrue= {\r\n    datalabels: {\r\n        align: 'top',\r\n        anchor: 'end',\r\n        rotation:270,\r\n        // rotation: function(ctx){\r\n        //     return ctx.datasets.data[ctx.dataIndex] * 25;\r\n        // }\r\n        // font: {\r\n        //     weight: 'bold'\r\n        // }\r\n    }\r\n}\r\nconst Sidebarplugin= {\r\n    datalabels: {\r\n        align: 'right',\r\n        anchor: 'end',\r\n       \r\n        // rotation: function(ctx){\r\n        //     return ctx.datasets.data[ctx.dataIndex] * 25;\r\n        // }\r\n        // font: {\r\n        //     weight: 'bold'\r\n        // }\r\n    }\r\n}\r\nconst animation={\r\n    onComplete: function () {\r\n        var chartInstance = this.chart;\r\n        var ctx = chartInstance.ctx;\r\n        // ctx.textAlign = \"center\";\r\n        // ctx.font = \"bold 25px Arial\";\r\n        // ctx.fillStyle = \"white\";\r\n        ctx.translate(0,1000);\r\n        ctx.rotate(-0.5*Math.PI);\r\n        Chart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n            var meta = chartInstance.controller.getDatasetMeta(i);\r\n            Chart.helpers.each(meta.data.forEach(function (bar, index) {\r\n                ctx.fillText(dataset.data[index], bar._model.x, bar._model.y - 36);\r\n            }),this)\r\n        }),this);\r\n    }\r\n}","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\client\\AddClient.js",["238","239","240","241","242","243","244"],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\client\\ClientList.js",["245","246","247","248","249","250","251","252"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image,\r\n    InputGroup,\r\n    FormControl\r\n} from 'react-bootstrap';\r\nimport axiosInstance from '../../utils/axiosinstance'\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport swal from 'sweetalert';\r\nimport AddClient from './AddClient'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nvar token = localStorage.getItem('access_token')\r\n\r\n\r\nexport default class ClientList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emailSearch: '',\r\n            countrySearch: '',\r\n            addClient: false,\r\n            client_id: null,\r\n            client_list: [],\r\n            country_list: [],\r\n            search: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance.post(`/country/list`).then((res) => {\r\n            const country_list = res.data.response.country_list\r\n            this.setState({ country_list })\r\n            console.log(country_list)\r\n        })\r\n\r\n        axiosInstance.post(`/client/list`)\r\n            .then(res => {\r\n                const client_list = res.data.response.client_list\r\n                this.setState({ client_list })\r\n                console.log(client_list, 'client_list');\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    trashClient = (id) => {\r\n        axiosInstance.post(`/client/delete`, { id })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.message.success !== undefined) {\r\n                    swal(\"success!\", `${res.data.message.success}`, \"success\").then(() => this.componentDidMount())\r\n                } else {\r\n                    swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                }\r\n            })\r\n    }\r\n    renderComponent = (id) => {\r\n        this.setState({\r\n            addClient: true,\r\n            client_id: id,\r\n        })\r\n    }\r\n    Back = () => {\r\n        this.setState({\r\n            addClient: false,\r\n            client_id: null,\r\n        })\r\n        this.componentDidMount()\r\n    }\r\n\r\n    render() {\r\n        const { client_list, addClient, emailSearch, countrySearch, country_list } = this.state\r\n\r\n        return (\r\n            <div>\r\n                {addClient ? <AddClient id={this.state.client_id} Back={this.Back} /> :\r\n\r\n                    <div className=\"component\">\r\n                        <h3 style={{ marginTop: \"30px\" }}>Client List</h3>\r\n                        <Card style={{ marginTop: \"20px\", backgroundColor: \"white\" }}>\r\n                            <Row>\r\n                                <Col lg={4}>\r\n                                    <Autocomplete\r\n                                        options={client_list}\r\n                                        onChange={(e, value) =>value !== null ? this.setState({ emailSearch: value.email }):  this.setState({ emailSearch: '' }) }\r\n                                        getOptionLabel={(option) => option.email}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Enter Email' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <button className='iconButtton'  ><i className=\"fa fa-search\"  ></i></button><br />\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <Autocomplete\r\n                                        options={country_list}\r\n                                        onChange={(e, value) => value !== null ? this.setState({ countrySearch: value.id }) : this.setState({ countrySearch: '' })}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderInput={(params) => (\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <Form.Control placeholder='Enter Country' type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <button className='iconButtton'><i className=\"fa fa-search\" onClick={this.onSearchCountry} ></i></button><br />\r\n                                </Col>\r\n                                <Col lg={{ offset: '3', span: '1' }}>\r\n                                    <button className='addIcon' onClick={() => this.setState({ addClient: !addClient })} >\r\n                                        <i className=\"fa fa-plus\" style={{ fontSize: \"20px\", color: \"white\" }}></i>\r\n                                    </button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row style={{ marginTop: \"10px\", overflow: \"auto\" }}>\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Client Name</th>\r\n                                            <th scope=\"col\">Address</th>\r\n                                            <th scope=\"col\">Email ID</th>\r\n                                            <th scope=\"col\">Phone No</th>\r\n                                            <th scope=\"col\">Country </th>\r\n                                            <th scope=\"col\">Contact Person</th>\r\n                                            <th scope=\"col\">Delete</th>\r\n                                            <th scope=\"col\">Edit</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {client_list.map((client, i) =>\r\n                                            (emailSearch === '' || client.email === emailSearch) && (countrySearch === '' || client.country === countrySearch) &&\r\n                                            <tr key={client.id} className={i % 2 === 0 ? \"rowtable\" : \"\"} >\r\n                                                <td>{client.name}</td>\r\n                                                <td>{client.address}</td>\r\n                                                <td>{client.email}</td>\r\n                                                <td>{client.phone}</td>\r\n                                                {this.state.country_list.map(country => {\r\n                                                    return (client.country === country.id) && <td>{country.name}</td>\r\n                                                })}\r\n                                                <td>{client.contact_person}</td>\r\n                                                <td><button onClick={(e) => this.trashClient(client.id)} style={{ border: \"none\" }} ><i className=\"fa fa-trash\" style={{ fontSize: \"18px\", color: \"red\" }}></i></button></td>\r\n                                                <td> <button onClick={(e) => this.renderComponent(client.id)} style={{ width: \"100px\", height: \"25px\", backgroundColor: \"#4A88DC\", border: \"none\", color: \"white\", borderRadius: \"10px\" }}>EDIT</button></td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </Row>\r\n                        </Card>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\contractor\\Addcontractor.js",["253","254","255","256","257","258","259","260"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport Logo from '../../img/logo-light.png'\r\nimport axios from 'axios'\r\nimport CustomButton from '../../utils/Button'\r\nimport { pathOr, equals, head, filter, } from 'ramda';\r\nimport Swal from 'sweetalert2';\r\nimport swal from 'sweetalert';\r\nimport { Link } from 'react-router-dom';\r\n\r\nvar token = localStorage.getItem('access_token')\r\n\r\nexport default class Addcontractor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contractor_id: this.props.id,\r\n            name: '',\r\n            address: '',\r\n            country: 0,\r\n            phone: '',\r\n            email: '',\r\n            contact_person: '',\r\n            country_list: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(`https://ccm.digisailor.in/api/public/country/list`, {}, {\r\n            params: { access_token: token }\r\n        }).then((res) => {\r\n            const country_list = res.data.response.country_list\r\n            this.setState({ country_list })\r\n        })\r\n\r\n        if (this.state.contractor_id !== null) {\r\n            axios.post(`https://ccm.digisailor.in/api/public/contractor/get_contractor_details`, { id: this.state.contractor_id }, {\r\n                params: { access_token: token }\r\n            })\r\n                .then(res => {\r\n                    const contractor_details = res.data.response.contractor_details\r\n                    this.setState({\r\n                        name: contractor_details.name,\r\n                        address: contractor_details.address,\r\n                        country: contractor_details.country,\r\n                        phone: contractor_details.phone,\r\n                        email: contractor_details.email,\r\n                        contact_person: contractor_details.contact_person,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(e.target.value)\r\n    }\r\n    onSubmit = (e) => {\r\n        const { name, address, phone, email, contact_person, country } = this.state;\r\n        const data = { name, email, country, address, contact_person, phone, }\r\n\r\n        axios.post(`https://ccm.digisailor.in/api/public/contractor/add`, data, {\r\n            auth: {\r\n                username: 'ccm_auth',\r\n                password: 'ccm_digi123#'\r\n            },\r\n            params: { access_token: token }\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.message.success !== undefined) {\r\n                    swal(\"success!\", `${res.data.message.success}`, \"success\").then(() => this.onCancel())\r\n                } else {\r\n                    swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                }\r\n\r\n            })\r\n    }\r\n    onUpdate = (e) => {\r\n        const { name, address, phone, email, contact_person, country, contractor_id } = this.state;\r\n        const data = { name, email, country, address, contact_person, phone, }\r\n\r\n        axios.post(`https://ccm.digisailor.in/api/public/contractor/edit/` + contractor_id, data, {\r\n            auth: {\r\n                username: 'ccm_auth',\r\n                password: 'ccm_digi123#'\r\n            },\r\n            params: { access_token: token }\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.message.success !== undefined) {\r\n                    swal(\"success!\", `${res.data.message.success}`, \"success\").then(() => this.onCancel())\r\n                } else {\r\n                    swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                }\r\n                this.props.Back()\r\n            })\r\n            .catch((e) => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            contractor_id: this.props.id,\r\n            name: '',\r\n            address: '',\r\n            country: 0,\r\n            phone: '',\r\n            email: '',\r\n            contact_person: '',\r\n            contractor_list: [],\r\n            country_list: [],\r\n        })\r\n        this.componentDidMount();\r\n    }\r\n    render() {\r\n        const { name, address, phone, email, contact_person, country, country_list } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"component\">\r\n                    <h5>ADD/EDIT VENDOR PROFILE</h5>\r\n                    <Card style={{ marginTop: \"3%\" }}>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col style={{ marginTop: \"80px\" }} lg={4}>\r\n                                    <Image src={Logo} className='profile-img'></Image>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <Form.Group>\r\n                                        <Col>\r\n                                            <Form.Label >Contractor Name</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Full Name\"\r\n                                                name=\"name\"\r\n                                                value={name}\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Address\"\r\n                                            name=\"address\"\r\n                                            value={address}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Country</Form.Label>\r\n                                        <Form.Control as=\"select\" className=\"select-style\" name=\"country\" value={country} onChange={this.onChange} required>\r\n                                            <option value='0' selected disabled> Country</option>\r\n                                            {country_list.map((country) => {\r\n                                                return <option key={country.id} value={country.id}>{country.name}</option>\r\n                                            })}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Phone Number</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Phone Number\"\r\n                                            name=\"phone\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Email\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label >Contact Person</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Full Name\"\r\n                                            name=\"contact_person\"\r\n                                            value={contact_person}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"row justify-content-md-center\" style={{ marginTop: \"3%\" }}>\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Back\" ClickEvent={this.props.Back} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Add\" disabledButton={this.props.id !== undefined} ClickEvent={this.onSubmit} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Update\" disabledButton={this.props.id === undefined} ClickEvent={this.onUpdate} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Cancel\" ClickEvent={this.onCancel} />\r\n                            </Row>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\contractor\\Contractorlist.js",["261","262","263","264","265","266"],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\user\\AddUser.js",["267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport CustomTextBox from '../../utils/TextBox'\r\nimport CustomButton from '../../utils/Button'\r\nimport Logo from '../../img/logo-light.png'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ReactCountryFlag from \"react-country-flag\"\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport { Us } from 'react-flags-select';\r\nimport Forgotpassword from '../../auth/Forgotpassword';\r\n\r\n\r\nvar token = localStorage.getItem('access_token')\r\n\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user_id: this.props.id,\r\n            full_name: \"\",\r\n            user_name: \"\",\r\n            country: 0,\r\n            email: \"\",\r\n            address: \"\",\r\n            department: \"\",\r\n            contact_person: '',\r\n            phone: \"\",\r\n            selected_country: 0,\r\n            country_list: [],\r\n            role: \"1\",\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.state.user_id, \"this.state.user_id\")\r\n        axios.post(`https://ccm.digisailor.in/api/public/country/list`, {}, {\r\n            params: { access_token: token }\r\n        }).then((res) => {\r\n            const country_list = res.data.response.country_list\r\n            this.setState({ country_list })\r\n        })\r\n        if (this.state.user_id !== null) {\r\n            axios.post(`https://ccm.digisailor.in/api/public/user/get_user_details`, { id: this.state.user_id }, {\r\n                params: { access_token: token }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data.response.user_details)\r\n                    const user_details = res.data.response.user_details\r\n                    this.setState({\r\n                        user_name: user_details.name,\r\n                        full_name: user_details.fname,\r\n                        address: user_details.address,\r\n                        country: user_details.country,\r\n                        phone: user_details.phone,\r\n                        email: user_details.email,\r\n                        department: user_details.department,\r\n                        role: user_details.role,\r\n                        contact_person: user_details.contact_person,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { user_name, full_name, country, email, address, department, contact_person, phone, role } = this.state;\r\n\r\n        const data = { name: user_name, fname: full_name, email, country, address, contact_person, department, phone, role }\r\n\r\n        axios.post(`https://ccm.digisailor.in/api/public/user/add`, data, {\r\n            auth: {\r\n                username: 'ccm_auth',\r\n                password: 'ccm_digi123#'\r\n            },\r\n            params: { access_token: token }\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.message.success !== undefined) {\r\n                    swal(\"success!\", `${res.data.message.success}`, \"success\").then(() => this.onCancel())\r\n                } else {\r\n                    swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                }\r\n                this.props.Back()\r\n            })\r\n            .catch((e) => {\r\n                console.log(e)\r\n            })\r\n    }\r\n    onUpdate = (e) => {\r\n        const { user_id, user_name, full_name, country, email, address, department, contact_person, phone, role } = this.state;\r\n\r\n        const data = { name: user_name, fname: full_name, email, country, address, contact_person, department, phone, role }\r\n        console.log(data, user_id)\r\n\r\n        axios.post(`https://ccm.digisailor.in/api/public/user/edit/` + user_id, data, {\r\n            auth: {\r\n                username: 'ccm_auth',\r\n                password: 'ccm_digi123#'\r\n            },\r\n            params: { access_token: token }\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.message.success !== undefined) {\r\n                    swal(\"success!\", `${res.data.message.success}`, \"success\").then(() => this.onCancel())\r\n                } else {\r\n                    swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                }\r\n                this.props.Back()\r\n            })\r\n            .catch((e) => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            full_name: \"\",\r\n            user_name: \"\",\r\n            country: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n            department: \"\",\r\n            phone: \"\",\r\n            selected_country: 0,\r\n            country_list: [],\r\n            role: \"1\",\r\n        })\r\n    }\r\n    setPassword = () => {\r\n        this.setState({ forgotPassword: !this.state.forgotPassword })\r\n    }\r\n    render() {\r\n        const { full_name, user_name, country, email, address, department, phone, contact_person, selected_country, country_list, role, forgotPassword } = this.state;\r\n        return (\r\n            <div>\r\n                <p style={{ fontSize: \"20px\" }}>User Profile</p>\r\n                {forgotPassword ? <Forgotpassword Back={this.setPassword} /> :\r\n                    <div className=\"component\">\r\n                        <Card style={{ marginTop: \"20px\" }}>\r\n                            <Row style={{ marginTop: \"20px\" }}>\r\n                                <Col lg={2}>\r\n                                    <Image src={Logo} className=\"profile-img\" ></Image>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"User name\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"user_name\"\r\n                                        txtBoxValue={user_name}\r\n                                        txtBoxID=\"user_name\"\r\n                                        txtBoxPH=\"User Name\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"Full name\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"full_name\"\r\n                                        txtBoxValue={full_name}\r\n                                        txtBoxID=\"full_name\"\r\n                                        txtBoxPH=\"Full Name\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n\r\n                                    <Form.Group as={Col}>\r\n                                        <Col>\r\n                                            <Form.Label >Country</Form.Label>\r\n                                            <Form.Control as=\"select\" className=\"select-style\" name=\"country\" value={country} onChange={this.onChange} required>\r\n                                                <option value='0' selected disabled> Country</option>\r\n                                                {country_list.map((country) => {\r\n                                                    return <option key={country.id} value={country.id}>{country.name}</option>\r\n                                                })}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"Email\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"email\"\r\n                                        txtBoxValue={email}\r\n                                        txtBoxID=\"email\"\r\n                                        txtBoxPH=\"Email\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"Address\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"address\"\r\n                                        txtBoxValue={address}\r\n                                        txtBoxID=\"address\"\r\n                                        txtBoxPH=\"Address\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label >Role</Form.Label>\r\n                                        <Col>\r\n                                            <Form.Control as=\"select\" className=\"select-style\" name=\"role\" value={role} onChange={this.onChange} required>\r\n                                                <option value=\"\" disabled> Role</option>\r\n                                                <option value=\"1\">Admin</option>\r\n                                                <option value=\"2\">User</option>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label >Department</Form.Label>\r\n                                        <Col>\r\n                                            <Form.Control as=\"select\" className=\"select-style\" name=\"department\" value={department} onChange={this.onChange} required>\r\n                                                <option value=\"\" disabled> Select Department</option>\r\n                                                <option value=\"department 1\">department 1</option>\r\n                                                <option value=\"department 2\">department 2</option>\r\n                                                <option value=\"department 3\">department 3 </option>\r\n                                                <option value=\"department 4\">department 4</option>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"Phone Number\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"phone\"\r\n                                        txtBoxValue={phone}\r\n                                        txtBoxID=\"phone\"\r\n                                        txtBoxPH=\"Phone Number\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                    <CustomTextBox\r\n                                        style=\"label-style\"\r\n                                        txtBoxLabel=\"Contact Person\"\r\n                                        txtBoxType=\"text\"\r\n                                        txtBoxName=\"contact_person\"\r\n                                        txtBoxValue={contact_person}\r\n                                        txtBoxID=\"contact_person\"\r\n                                        txtBoxPH=\"Contact Person\"\r\n                                        changeEvent={this.onChange}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {role === \"1\" ?\r\n                                <div>\r\n                                    <Row style={{ marginTop: \"20px\" }} >\r\n                                        <Col lg={2}>\r\n                                            <Form.Label >Permissions</Form.Label>\r\n                                        </Col>\r\n                                        <Col lg={5} className='box'>\r\n                                            <Form.Group as={Row}>\r\n                                                <Form.Label column lg={8}>Quotation/Invoice Management</Form.Label>\r\n                                                <Form.Label column lg={2}>View</Form.Label>\r\n                                                <Form.Label column lg={2}>Edit</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row}>\r\n                                                <Form.Label column lg={8} > Quotation Client Section</Form.Label>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row}>\r\n                                                <Form.Label column lg={8}> Quotation Contractor Section</Form.Label>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row}>\r\n                                                <Form.Label column lg={8}> Invoice Client Section</Form.Label>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row}>\r\n                                                <Form.Label column lg={8}> Invoice Contractor Section</Form.Label>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                                <Col lg={2}>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col lg={3} style={{ marginLeft: '10px' }}>\r\n                                            <Row className='box' style={{ padding: '5px 20px' }}>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>Administration</Form.Label>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" label=\"View User\" />\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" label=\"Manage User\" />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className='box' style={{ padding: '5px 20px', marginTop: '10px' }}>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>Other Priviliges</Form.Label>\r\n                                                    <Form.Check type=\"checkbox\" name=\"\" value=\"\" onChange=\"\" label=\"View Dashboard\" />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row style={{ marginTop: \"20px\" }}>\r\n                                        <Col lg={2}>\r\n                                            <Form.Label >Country</Form.Label>\r\n                                        </Col>\r\n\r\n                                        <Col lg={3}>\r\n                                            <Form.Control as=\"select\" className=\"select-style\" name=\"selected_country\" value={selected_country} onChange={this.onChange} style={{ padding: \"10px\" }} required>\r\n                                                <option value='0' selected disabled> Country</option>\r\n                                                {country_list.map((country) => {\r\n                                                    return <option key={country.id} value={country.id}>{country.name}</option>\r\n                                                })}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col lg={6} style={{ backgroundColor: \"White\", borderRadius: \"20px\" }}>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div> : ''}\r\n\r\n                            <Row className=\"row justify-content-md-center\" style={{ marginTop: \"3%\" }}>\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Back\" ClickEvent={this.props.Back} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Add\" disabledButton={this.props.id !== null} ClickEvent={this.onSubmit} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Update\" disabledButton={this.props.id === null} ClickEvent={this.onUpdate} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Cancel\" ClickEvent={this.onCancel} />\r\n                                <CustomButton BtnTxt=\"Forgot Password\" ClickEvent={this.setPassword} />\r\n                            </Row>\r\n\r\n                        </Card>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\user\\UserList.js",["280","281","282","283","284"],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\billing\\AddInvoice.js",["285","286","287","288","289","290","291","292","293","294","295","296"],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\AddCountry.js",["297","298","299","300"],"import React, { Component } from 'react'\r\nimport { Card, Row, Col, Form, Image } from 'react-bootstrap'\r\nimport topimage from './img/logo-light.png';\r\nimport CustomButton from './utils/Button'\r\nimport CountrySelect from 'react-bootstrap-country-select';\r\nimport { head } from 'ramda';\r\nimport axiosInstance from './utils/axiosinstance'\r\nimport { Alert } from './utils/Utilities'\r\nimport swal from 'sweetalert';\r\nimport Swal from 'sweetalert2';\r\n\r\nvar token = localStorage.getItem('access_token')\r\n\r\nexport default class Country extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            country_id: null,\r\n            country_object: '',\r\n            status: '',\r\n            country_list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(process.env.REACT_APP_URL)\r\n        axiosInstance.post(`/country/list`)\r\n            .then((res) => {\r\n                console.log(res,'response')\r\n                const country_list = res.data.response.country_list\r\n                this.setState({ country_list })\r\n                console.log(country_list, 'country_list');\r\n            })\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    countryChange = (e) => {\r\n        console.log(e)\r\n        this.setState({ country_object: e }, () => this.filterID())\r\n    }\r\n\r\n\r\n    filterID = () => {\r\n        const { country_list, country_object, } = this.state;\r\n        if (country_object !== null) {\r\n            const filterList = head(country_list.filter(object => object.name == country_object.name))\r\n            if (filterList !== undefined) {\r\n                this.setState({ country_id: filterList.id, status: filterList.status })\r\n            }\r\n\r\n        } else {\r\n            this.setState({ country_id: null, status: '' })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        const { country_object, status } = this.state;\r\n\r\n        const data = {\r\n            name: country_object.name,\r\n            status: status,\r\n        }\r\n        if (country_object === null || status === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Please Fillout all the Fields!',\r\n            })\r\n        } else {\r\n            axiosInstance.post(`/country/add`, data,)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.message.success !== undefined) {\r\n                        swal(\"success!\", `${res.data.message.success}`, \"success\")\r\n                    } else {\r\n                        swal(\"error!\", `${res.data.message.error}`, \"error\")\r\n                    }\r\n                })\r\n                .then(() => this.onCancel())\r\n            .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n\r\n    onUpdate = (e) => {\r\n        const { country_id, country_object, status } = this.state;\r\n\r\n        const data = {\r\n            name: country_object.name,\r\n            status: status,\r\n        }\r\n        axiosInstance.post(`/country/edit/` + country_id, data)\r\n            .then(res => {\r\n                if (res.data.message.success !== undefined) {\r\n                    console.log(res)\r\n                    Alert(\"success\", \"Success!\", `${res.data.message.success}`)\r\n                } else {\r\n                    console.log(res)\r\n                    Alert(\"error\", \"error!\", `${res.data.message.error}`)\r\n                }\r\n            })\r\n            .then(() => this.onCancel())\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n\r\n    onDelete = (e) => {\r\n        const { country_id, country_object, status } = this.state;\r\n\r\n        axiosInstance.post(`/country/delete`, { id: country_id })\r\n        .then(res => {\r\n            if (res.data.message.success !== undefined) {\r\n                console.log(res)\r\n                Alert(\"success\", \"Success!\", `${res.data.message.success}`)\r\n            } else {\r\n                console.log(res)\r\n                Alert(\"error\", \"error!\", `${res.data.message.error}`)\r\n            }\r\n        })\r\n            .then(() => this.onCancel())\r\n            .catch((e) => console.log(e))\r\n    }\r\n\r\n\r\n    onCancel = (e) => {\r\n        this.setState({\r\n            country_id: null,\r\n            country_object: '',\r\n            status: '',\r\n            country_list: [],\r\n        })\r\n        this.componentDidMount();\r\n    }\r\n\r\n    render() {\r\n        const { country_id, status, country_object } = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"component\">\r\n                    <p style={{ fontSize: \"20px\" }}>Country</p>\r\n\r\n                    <Card border=\"dark\" sm={6} style={{ height: \"500px\" }}>\r\n                        <Form >\r\n                            <Row style={{ marginTop: \"3%\" }}>\r\n                                <Col lg={4} sm={4}>\r\n                                    <Image src={topimage} rounded style={{ width: \"100px\", marginLeft: \"20%\" }} />\r\n                                </Col>\r\n\r\n                                <Col xs={6} sm={4}>\r\n\r\n                                    <Form.Group  >\r\n                                        <Form.Label style={{ fontSize: \"17px\", fontWeight: \"bold\", marginTop: \"15px\" }}>Country Name</Form.Label>\r\n                                        <CountrySelect\r\n                                            value={country_object}\r\n                                            onChange={this.countryChange}\r\n                                            valueAs='name'\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col xs={6} sm={4}>\r\n                                    <Form.Group  >\r\n                                        <Form.Label style={{ fontSize: \"17px\", fontWeight: \"bold\", marginTop: \"15px\" }}>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" name=\"status\" placeholder=\"status\" value={status} id=\"status\" onChange={this.onChange} >\r\n                                            <option value=\"\" disabled>Status</option>\r\n                                            <option value=\"1\">Active</option>\r\n                                            <option value=\"0\">Inactive</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"row justify-content-md-center\" style={{ marginTop: \"15%\" }}>\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Add\" disabledButton={country_id !== null} ClickEvent={this.onSubmit} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Update\" disabledButton={country_id === null} ClickEvent={this.onUpdate} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Delete\" disabledButton={country_id === null} ClickEvent={this.onDelete} />\r\n                                <CustomButton btnType=\"reset\" BtnTxt=\"Cancel\" ClickEvent={this.onCancel} />\r\n                            </Row>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Login.js",["301","302"],"import React,{useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport topimage from  '../img/logo-light.png';\r\nimport loginimage from  '../img/loginscrn.png';\r\nimport { Row,Col,Form,Image } from 'react-bootstrap'\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Login() {\r\nconst [Username, setUsername] = useState('');\r\nconst [Password, setPassword] = useState('');\r\nconst history = useHistory()\r\n\r\nconst onSubmit=(e)=>{\r\n    e.preventDefault()\r\n    if(Username !=='' && Password !==''){\r\n        axios.get('https://ccm.digisailor.in/api/public/login/login', {\r\n            auth: {\r\n            username: 'ccm_auth',\r\n            password: 'ccm_digi123#'\r\n            },\r\n            params:{\r\n                name: Username,\r\n                password: Password\r\n            }\r\n          })\r\n            .then((res)=>{\r\n                console.log(res) \r\n                const data = res.data\r\n                if(data.response.is_login===true && data.session.users!==undefined){\r\n                    const access_token = data.response.access_token\r\n                    localStorage.setItem('isLogin',true)\r\n                    localStorage.setItem('access_token',access_token)\r\n                    window.location.replace('/dashboard')\r\n                    //window.location.replace('https://fir-2304e.web.app/dashboard')\r\n\r\n                }\r\n                else{   \r\n                    Swal.fire({\r\n                        icon:\"error\",\r\n                        title:\"Oops!\",\r\n                        text:\"Check Username and Password\"\r\n                    })\r\n                }  \r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })   \r\n }\r\n else{\r\n    Swal.fire({\r\n        icon:\"error\",\r\n        title:\"Oops!\",\r\n        text:\"Please Fillout All Fields\"\r\n    })\r\n }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{backgroundColor:\"rgb(202,229,245)\"}}>\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <div style={{width:\"600px\",height:\"80%\",margin:\"auto\",marginTop:\"15%\"}}>\r\n                        <div style={{width:\"20%\",margin:\"auto\"}}>\r\n                            <Image src={topimage} style={{marginTop:\"10%\"}} />\r\n                        </div>\r\n                        <div style={{marginTop:\"5%\"}}>\r\n                            <Row>\r\n                                <h3 className=\"login-title\" style={{marginLeft:\"20%\"}}>Crystal Clear Management- </h3>\r\n                            </Row>\r\n                            <Row>\r\n                                <h3  className=\"login-title\" style={{marginLeft:\"2%\"}}>Leading Facilities Management Service In Asia</h3>\r\n                            </Row>\r\n                        </div>\r\n                        <div style={{width:\"400px\",height:\"50%\",margin:\"auto\",marginTop:\"10%\"}}>\r\n                                <Form.Control\r\n                                    className=\"login-input\"\r\n                                    name=\"Username\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Username\" \r\n                                    onChange={(e)=>setUsername(e.target.value)}\r\n                                />\r\n                                <i className=\"fa fa-user-circle\" style={{position:\"relative\",bottom:\"12%\",left:\"3%\",fontSize:\"25px\",color:\"rgb(71,115,160)\"}}></i>\r\n                                 <Form.Control\r\n                                    className=\"login-input\"\r\n                                    style={{marginTop:\"50px\"}}\r\n                                    name=\"Password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    onChange =  {(e)=>setPassword(e.target.value)}  \r\n                                />\r\n                                <i class=\"fa fa-lock\" aria-hidden=\"true\"  style={{fontSize:\"25px\",position:\"relative\",bottom:\"11%\",left:\"3%\",color:\"rgb(71,115,160)\"}}></i>\r\n                                <Row style={{marginTop:\"10%\"}}>\r\n                                    <Col lg={6}>\r\n                                        {/* <h6 style={{marginTop:\"10px\"}}>forgot your password?</h6> */}\r\n                                    </Col>\r\n                                    <Col lg={6}>\r\n                                        <button className=\"login-button\" type=\"button\"  onClick={onSubmit}>Login</button>\r\n                                    </Col>\r\n                                </Row>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} style={{marginTop:\"50px\"}}>\r\n                <div>\r\n                    <img style={{width:\"100%\",height:\"100%\"}} src={loginimage} alt=\"img missing\"/>\r\n                </div>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\landingPage\\LandingPage.js",["303","304"],"import React, { Component } from 'react'\r\nimport { Card,Row,Col,Form,Button,Image } from 'react-bootstrap'\r\nimport CountryFlags from './CountryFlags'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from '../../utils/axiosinstance'\r\nimport Logo from '../../img/logo-light.png'\r\nexport default class LandingPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             countries:[],\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    componentDidMount(){\r\n        axios.post('/country/list')\r\n        .then((res)=>{\r\n            const countries = res.data.response.country_list\r\n            this.setState({countries})\r\n            console.log(countries)\r\n        })\r\n    }\r\n    render() {\r\n        const { countries } = this.state\r\n        return (\r\n            <div>\r\n                <div className=\"component\">\r\n                <h4>Client List</h4>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Card lg={4}>\r\n                            <Form.Control type=\"text\"  id=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={this.onChange}\r\n                                    name=\"search\"\r\n                                    onChange={this.handleSearch}\r\n                                    style={{borderRadius:\"25px\",padding:\"10px\",boxShadow:\"5px 5px 8px #888888\",paddingLeft:\"20px\"}}\r\n                                    />\r\n                                   <i className=\"fa fa-search\" style={{position:\"relative\",\r\n                                                bottom:\"30px\",\r\n                                                left:\"73%\"}}\r\n                                        ></i>\r\n                                        {countries.map((country,i)=>(\r\n                                                <CountryFlags key={i} country={country.name}/>))}\r\n                            <Row style={{marginTop:\"20%\"}}>\r\n                                <Link to=\"/country\"><Button>Add Country</Button></Link>\r\n                            </Row>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col lg={8}>\r\n                            <Card style={{height:\"800px\"}}>\r\n                            <Form.Control type=\"text\"  id=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={this.onChange}\r\n                                    name=\"search\"\r\n                                    onChange={this.handleSearch}\r\n                                    style={{borderRadius:\"25px\",padding:\"10px\",boxShadow:\"5px 5px 8px #888888\",paddingLeft:\"20px\"}}\r\n                                    />\r\n                                    <i className=\"fa fa-search\" style={{position:\"relative\",\r\n                                                bottom:\"30px\",\r\n                                                left:\"73%\"}}\r\n                                        ></i>\r\n\r\n                                <Row>\r\n                                <Col>\r\n                                    <Card style={{backgroundColor:\"white\",marginTop:\"30px\"}}>\r\n                                        <Row>\r\n                                        <Col lg={6}>\r\n                                        <i className=\"fa fa-tasks\" style={{fontSize:\"20px\"}}></i>\r\n                                        <Link to='/cwr-summary' style={{fontWeight:\"bold\",fontSize:\"17px\",marginLeft:\"20px\",textDecoration:\"none\"}}>CWR SUMMARY</Link>\r\n                                        </Col>\r\n                                        <Col lg={6}>\r\n                                        <i className=\"fa fa-sitemap\" aria-hidden=\"true\"></i><Link to='/dashboard' style={{fontWeight:\"bold\",fontSize:\"17px\",marginLeft:\"20px\",textDecoration:\"none\"}}>DASHBOARD</Link>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </Card>\r\n                                    <Image src={Logo} style={{marginTop:\"20%\"}} className=\"profile-img\" ></Image>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            </Card>\r\n                           \r\n                        </Col>\r\n                    \r\n                    </Row>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\administration\\landingPage\\CountryFlags.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\auth\\Forgotpassword.js",["305","306"],"import React, { Component } from 'react'\r\nimport { Card, Form, Row, Col, Button, Image } from 'react-bootstrap'\r\nimport Logo from '../img/logo-light.png'\r\nimport axios from 'axios'\r\nimport CustomTextBox from '../utils/TextBox'\r\nimport { Alert } from '../utils/Utilities'\r\n\r\n\r\nexport class Forgotpassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            Password: '', \r\n            ConfirmPassword: '',\r\n        }\r\n    }\r\n    onChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit = ()=>{\r\n        const { Password, ConfirmPassword ,} = this.state\r\n        if (Object.values(this.state).every(x => x)  ) {\r\n            if( Password !== ConfirmPassword ) {\r\n                Alert(\"error\",\"Oops\",\"Password Mismatched!\")\r\n                return\r\n            }\r\n            Alert(\"success\", \"Success\", \"Password Reset Successful\") \r\n            this.props.Back()\r\n        }\r\n        else {\r\n            Alert(\"error\", \"Oops\", \"Please Fillout All Fields!\")\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { Password, ConfirmPassword ,} = this.state\r\n        return (\r\n            <div>\r\n                <div className=\"component\">\r\n                <Card border=\"dark\" sm={6} >\r\n                     <Row>\r\n                         <Col sm={4}>\r\n                             <Image src={Logo} rounded style={{ width: \"100px\", marginLeft: \"30%\", marginTop: \"20%\" }} />\r\n                         </Col>\r\n                         <Col sm={4} style={{marginTop:'50px'}}>\r\n                         <CustomTextBox\r\n                             txtBoxLabel=\"Password\"\r\n                             txtBoxType=\"password\"\r\n                             txtBoxName=\"Password\"\r\n                             txtBoxValue={Password}\r\n                             txtBoxPH=\"Password\"\r\n                             changeEvent={this.onChange}\r\n                         />\r\n                         <CustomTextBox\r\n                             txtBoxLabel=\"Confirm Password\"\r\n                             txtBoxType=\"password\"\r\n                             txtBoxName=\"ConfirmPassword\"    \r\n                             txtBoxValue={ConfirmPassword}                         \r\n                             txtBoxPH=\"ConfirmPassword\"\r\n                             changeEvent={this.onChange}\r\n                         />\r\n                         </Col>\r\n                     </Row>\r\n                     <Row className='d-flex justify-content-center' style={{ marginTop: \"10%\" }}>\r\n                         <Button onClick={this.onSubmit}>Reset</Button>\r\n                     </Row>\r\n                 </Card>\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forgotpassword\r\n\r\n// export default function Forgotpassword(props) {\r\n\r\n//     const [Password, setPassword] = useState('')\r\n//     const [ConfirmPassword, setConfirmPassword] = useState('')\r\n\r\n\r\n//     const onSubmit = () => {\r\n//         const data = { Password, ConfirmPassword,}\r\n//         if (Object.values(data).every(x => x)) {\r\n//             Alert(\"success\", \"Success\", \"Password Reset Successful\")\r\n//             props.status = false\r\n//         }\r\n//         else {\r\n//             Alert(\"error\", \"Oops\", \"Please Fillout All Fields!\")\r\n//         }\r\n//         if (Password !== ConfirmPassword) {\r\n//             Alert(\"error\", \"Oops\", \"Password Mismatched!\")\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"component\">\r\n//                 <Card border=\"dark\" sm={6} >\r\n//                     <Row>\r\n//                         <Col sm={4}>\r\n//                             <Image src={Logo} rounded style={{ width: \"100px\", marginLeft: \"30%\", marginTop: \"20%\" }} />\r\n//                         </Col>\r\n//                         <Col sm={4} >\r\n//                         <CustomTextBox\r\n//                             txtBoxLabel=\"Password\"\r\n//                             txtBoxType=\"text\"\r\n//                             txtBoxName=\"Password\"\r\n//                             txtBoxID=\"Password\"\r\n//                             txtBoxPH=\"Password\"\r\n//                             onChange={(e)=>setPassword(e.target.value)}\r\n//                         />\r\n//                         <CustomTextBox\r\n//                             txtBoxLabel=\"Confirm Password\"\r\n//                             txtBoxType=\"text\"\r\n//                             txtBoxName=\"ConfirmPassword\"\r\n//                             txtBoxID=\"ConfirmPassword\"\r\n//                             txtBoxPH=\"ConfirmPassword\"\r\n//                             onChange={(e)=>setConfirmPassword(e.target.value)}\r\n//                         />\r\n//                         </Col>\r\n//                     </Row>\r\n//                     <Row className='d-flex justify-content-center' style={{ marginTop: \"10%\" }}>\r\n//                         <Button onClick={() => onSubmit()}>Reset</Button>\r\n//                     </Row>\r\n//                 </Card>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\Button.js",[],"C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\utils\\TextBox.js",["307","308"],"import React from 'react';\r\nimport {\r\n    Form, Row, Col\r\n} from 'react-bootstrap';\r\n\r\n\r\nconst CustomTextBox = (props) => {\r\n\r\n    return (\r\n        <Form.Group >\r\n            <Form.Label  >{props.txtBoxLabel}</Form.Label>\r\n            <Form.Control\r\n                type={props.txtBoxType}\r\n                id={props.txtBoxID}\r\n                placeholder={props.txtBoxPH}\r\n                value={props.txtBoxValue}\r\n                onChange={props.changeEvent}\r\n                name={props.txtBoxName}\r\n                required\r\n            />\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default CustomTextBox;\r\n","C:\\Users\\DIGISAILOR\\CCM\\CCM-Dev\\src\\components\\Routes.js",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"317","line":13,"column":8,"nodeType":"315","messageId":"316","endLine":13,"endColumn":12},{"ruleId":"313","severity":1,"message":"318","line":14,"column":10,"nodeType":"315","messageId":"316","endLine":14,"endColumn":14},{"ruleId":"319","severity":1,"message":"320","line":27,"column":13,"nodeType":"321","messageId":"322","endLine":27,"endColumn":18},{"ruleId":"313","severity":1,"message":"323","line":43,"column":17,"nodeType":"315","messageId":"316","endLine":43,"endColumn":26},{"ruleId":"313","severity":1,"message":"324","line":43,"column":28,"nodeType":"315","messageId":"316","endLine":43,"endColumn":37},{"ruleId":"313","severity":1,"message":"325","line":43,"column":39,"nodeType":"315","messageId":"316","endLine":43,"endColumn":46},{"ruleId":"313","severity":1,"message":"326","line":43,"column":48,"nodeType":"315","messageId":"316","endLine":43,"endColumn":56},{"ruleId":"313","severity":1,"message":"327","line":43,"column":58,"nodeType":"315","messageId":"316","endLine":43,"endColumn":74},{"ruleId":"313","severity":1,"message":"328","line":43,"column":76,"nodeType":"315","messageId":"316","endLine":43,"endColumn":81},{"ruleId":"313","severity":1,"message":"329","line":43,"column":83,"nodeType":"315","messageId":"316","endLine":43,"endColumn":92},{"ruleId":"313","severity":1,"message":"330","line":43,"column":94,"nodeType":"315","messageId":"316","endLine":43,"endColumn":102},{"ruleId":"313","severity":1,"message":"331","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":15},{"ruleId":"313","severity":1,"message":"332","line":10,"column":8,"nodeType":"315","messageId":"316","endLine":10,"endColumn":12},{"ruleId":"313","severity":1,"message":"333","line":11,"column":8,"nodeType":"315","messageId":"316","endLine":11,"endColumn":16},{"ruleId":"313","severity":1,"message":"334","line":13,"column":8,"nodeType":"315","messageId":"316","endLine":13,"endColumn":20},{"ruleId":"313","severity":1,"message":"335","line":23,"column":3,"nodeType":"315","messageId":"316","endLine":23,"endColumn":6},{"ruleId":"313","severity":1,"message":"336","line":24,"column":3,"nodeType":"315","messageId":"316","endLine":24,"endColumn":6},{"ruleId":"313","severity":1,"message":"337","line":25,"column":3,"nodeType":"315","messageId":"316","endLine":25,"endColumn":17},{"ruleId":"313","severity":1,"message":"338","line":26,"column":3,"nodeType":"315","messageId":"316","endLine":26,"endColumn":11},{"ruleId":"313","severity":1,"message":"339","line":27,"column":3,"nodeType":"315","messageId":"316","endLine":27,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"340","line":4,"column":5,"nodeType":"315","messageId":"316","endLine":4,"endColumn":9},{"ruleId":"313","severity":1,"message":"341","line":5,"column":5,"nodeType":"315","messageId":"316","endLine":5,"endColumn":9},{"ruleId":"313","severity":1,"message":"335","line":6,"column":5,"nodeType":"315","messageId":"316","endLine":6,"endColumn":8},{"ruleId":"313","severity":1,"message":"336","line":7,"column":5,"nodeType":"315","messageId":"316","endLine":7,"endColumn":8},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"344","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":10},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"345","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":15},{"ruleId":"313","severity":1,"message":"346","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":16},{"ruleId":"313","severity":1,"message":"347","line":18,"column":8,"nodeType":"315","messageId":"316","endLine":18,"endColumn":18},{"ruleId":"313","severity":1,"message":"348","line":19,"column":8,"nodeType":"315","messageId":"316","endLine":19,"endColumn":20},{"ruleId":"313","severity":1,"message":"349","line":21,"column":5,"nodeType":"315","messageId":"316","endLine":21,"endColumn":10},{"ruleId":"350","severity":1,"message":"351","line":87,"column":64,"nodeType":"352","messageId":"322","endLine":87,"endColumn":66},{"ruleId":"313","severity":1,"message":"314","line":2,"column":16,"nodeType":"315","messageId":"316","endLine":2,"endColumn":25},{"ruleId":"313","severity":1,"message":"353","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":12},{"ruleId":"313","severity":1,"message":"354","line":94,"column":17,"nodeType":"315","messageId":"316","endLine":94,"endColumn":31},{"ruleId":"313","severity":1,"message":"355","line":108,"column":27,"nodeType":"315","messageId":"316","endLine":108,"endColumn":40},{"ruleId":"313","severity":1,"message":"356","line":108,"column":57,"nodeType":"315","messageId":"316","endLine":108,"endColumn":63},{"ruleId":"313","severity":1,"message":"357","line":109,"column":13,"nodeType":"315","messageId":"316","endLine":109,"endColumn":28},{"ruleId":"313","severity":1,"message":"358","line":109,"column":190,"nodeType":"315","messageId":"316","endLine":109,"endColumn":204},{"ruleId":"313","severity":1,"message":"359","line":109,"column":220,"nodeType":"315","messageId":"316","endLine":109,"endColumn":234},{"ruleId":"313","severity":1,"message":"360","line":109,"column":256,"nodeType":"315","messageId":"316","endLine":109,"endColumn":271},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"314","line":4,"column":5,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"313","severity":1,"message":"340","line":5,"column":5,"nodeType":"315","messageId":"316","endLine":5,"endColumn":9},{"ruleId":"313","severity":1,"message":"341","line":6,"column":5,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"342","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":10},{"ruleId":"313","severity":1,"message":"337","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":19},{"ruleId":"313","severity":1,"message":"338","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":13},{"ruleId":"313","severity":1,"message":"361","line":13,"column":5,"nodeType":"315","messageId":"316","endLine":13,"endColumn":12},{"ruleId":"313","severity":1,"message":"362","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":13},{"ruleId":"313","severity":1,"message":"363","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":23},{"ruleId":"313","severity":1,"message":"314","line":5,"column":5,"nodeType":"315","messageId":"316","endLine":5,"endColumn":14},{"ruleId":"313","severity":1,"message":"340","line":6,"column":5,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"342","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":10},{"ruleId":"313","severity":1,"message":"337","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":19},{"ruleId":"313","severity":1,"message":"338","line":13,"column":5,"nodeType":"315","messageId":"316","endLine":13,"endColumn":13},{"ruleId":"313","severity":1,"message":"361","line":14,"column":5,"nodeType":"315","messageId":"316","endLine":14,"endColumn":12},{"ruleId":"364","severity":1,"message":"365","line":39,"column":37,"nodeType":"366","messageId":"367","endLine":39,"endColumn":54},{"ruleId":"313","severity":1,"message":"368","line":58,"column":15,"nodeType":"315","messageId":"316","endLine":58,"endColumn":26},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"340","line":4,"column":5,"nodeType":"315","messageId":"316","endLine":4,"endColumn":9},{"ruleId":"313","severity":1,"message":"341","line":5,"column":5,"nodeType":"315","messageId":"316","endLine":5,"endColumn":9},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"337","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":19},{"ruleId":"313","severity":1,"message":"338","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":13},{"ruleId":"313","severity":1,"message":"361","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":12},{"ruleId":"313","severity":1,"message":"314","line":4,"column":5,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"313","severity":1,"message":"340","line":5,"column":5,"nodeType":"315","messageId":"316","endLine":5,"endColumn":9},{"ruleId":"313","severity":1,"message":"341","line":6,"column":5,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"336","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":8},{"ruleId":"313","severity":1,"message":"342","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":10},{"ruleId":"313","severity":1,"message":"337","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":19},{"ruleId":"313","severity":1,"message":"338","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":13},{"ruleId":"313","severity":1,"message":"361","line":13,"column":5,"nodeType":"315","messageId":"316","endLine":13,"endColumn":12},{"ruleId":"313","severity":1,"message":"369","line":108,"column":7,"nodeType":"315","messageId":"316","endLine":108,"endColumn":16},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"370","line":14,"column":10,"nodeType":"315","messageId":"316","endLine":14,"endColumn":16},{"ruleId":"313","severity":1,"message":"371","line":14,"column":18,"nodeType":"315","messageId":"316","endLine":14,"endColumn":24},{"ruleId":"313","severity":1,"message":"372","line":14,"column":26,"nodeType":"315","messageId":"316","endLine":14,"endColumn":30},{"ruleId":"313","severity":1,"message":"373","line":14,"column":32,"nodeType":"315","messageId":"316","endLine":14,"endColumn":38},{"ruleId":"313","severity":1,"message":"318","line":17,"column":10,"nodeType":"315","messageId":"316","endLine":17,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"345","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":15},{"ruleId":"313","severity":1,"message":"346","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":16},{"ruleId":"313","severity":1,"message":"318","line":14,"column":10,"nodeType":"315","messageId":"316","endLine":14,"endColumn":14},{"ruleId":"313","severity":1,"message":"353","line":15,"column":8,"nodeType":"315","messageId":"316","endLine":15,"endColumn":12},{"ruleId":"313","severity":1,"message":"349","line":20,"column":5,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"370","line":14,"column":10,"nodeType":"315","messageId":"316","endLine":14,"endColumn":16},{"ruleId":"313","severity":1,"message":"371","line":14,"column":18,"nodeType":"315","messageId":"316","endLine":14,"endColumn":24},{"ruleId":"313","severity":1,"message":"372","line":14,"column":26,"nodeType":"315","messageId":"316","endLine":14,"endColumn":30},{"ruleId":"313","severity":1,"message":"373","line":14,"column":32,"nodeType":"315","messageId":"316","endLine":14,"endColumn":38},{"ruleId":"313","severity":1,"message":"353","line":15,"column":8,"nodeType":"315","messageId":"316","endLine":15,"endColumn":12},{"ruleId":"313","severity":1,"message":"318","line":17,"column":10,"nodeType":"315","messageId":"316","endLine":17,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"318","line":12,"column":10,"nodeType":"315","messageId":"316","endLine":12,"endColumn":14},{"ruleId":"313","severity":1,"message":"353","line":13,"column":8,"nodeType":"315","messageId":"316","endLine":13,"endColumn":12},{"ruleId":"313","severity":1,"message":"349","line":19,"column":5,"nodeType":"315","messageId":"316","endLine":19,"endColumn":10},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"353","line":16,"column":8,"nodeType":"315","messageId":"316","endLine":16,"endColumn":12},{"ruleId":"313","severity":1,"message":"318","line":17,"column":10,"nodeType":"315","messageId":"316","endLine":17,"endColumn":14},{"ruleId":"313","severity":1,"message":"374","line":19,"column":8,"nodeType":"315","messageId":"316","endLine":19,"endColumn":24},{"ruleId":"313","severity":1,"message":"375","line":20,"column":8,"nodeType":"315","messageId":"316","endLine":20,"endColumn":24},{"ruleId":"313","severity":1,"message":"376","line":21,"column":10,"nodeType":"315","messageId":"316","endLine":21,"endColumn":12},{"ruleId":"377","severity":1,"message":"378","line":166,"column":41,"nodeType":"379","endLine":166,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":176,"column":41,"nodeType":"379","endLine":176,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":200,"column":41,"nodeType":"379","endLine":200,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":210,"column":41,"nodeType":"379","endLine":210,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":244,"column":41,"nodeType":"379","endLine":244,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":254,"column":41,"nodeType":"379","endLine":254,"endColumn":60},{"ruleId":"313","severity":1,"message":"314","line":2,"column":26,"nodeType":"315","messageId":"316","endLine":2,"endColumn":35},{"ruleId":"313","severity":1,"message":"380","line":4,"column":8,"nodeType":"315","messageId":"316","endLine":4,"endColumn":21},{"ruleId":"313","severity":1,"message":"318","line":5,"column":10,"nodeType":"315","messageId":"316","endLine":5,"endColumn":14},{"ruleId":"313","severity":1,"message":"353","line":6,"column":8,"nodeType":"315","messageId":"316","endLine":6,"endColumn":12},{"ruleId":"313","severity":1,"message":"349","line":11,"column":5,"nodeType":"315","messageId":"316","endLine":11,"endColumn":10},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"342","line":8,"column":5,"nodeType":"315","messageId":"316","endLine":8,"endColumn":11},{"ruleId":"313","severity":1,"message":"343","line":9,"column":5,"nodeType":"315","messageId":"316","endLine":9,"endColumn":10},{"ruleId":"313","severity":1,"message":"381","line":10,"column":5,"nodeType":"315","messageId":"316","endLine":10,"endColumn":10},{"ruleId":"313","severity":1,"message":"382","line":14,"column":8,"nodeType":"315","messageId":"316","endLine":14,"endColumn":12},{"ruleId":"313","severity":1,"message":"349","line":20,"column":5,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"354","line":68,"column":17,"nodeType":"315","messageId":"316","endLine":68,"endColumn":31},{"ruleId":"313","severity":1,"message":"383","line":78,"column":17,"nodeType":"315","messageId":"316","endLine":78,"endColumn":27},{"ruleId":"313","severity":1,"message":"384","line":110,"column":27,"nodeType":"315","messageId":"316","endLine":110,"endColumn":36},{"ruleId":"313","severity":1,"message":"385","line":110,"column":37,"nodeType":"315","messageId":"316","endLine":110,"endColumn":44},{"ruleId":"313","severity":1,"message":"386","line":110,"column":76,"nodeType":"315","messageId":"316","endLine":110,"endColumn":87},{"ruleId":"313","severity":1,"message":"387","line":110,"column":89,"nodeType":"315","messageId":"316","endLine":110,"endColumn":104},{"ruleId":"313","severity":1,"message":"349","line":12,"column":5,"nodeType":"315","messageId":"316","endLine":12,"endColumn":10},{"ruleId":"350","severity":1,"message":"351","line":55,"column":79,"nodeType":"352","messageId":"322","endLine":55,"endColumn":81},{"ruleId":"313","severity":1,"message":"388","line":119,"column":29,"nodeType":"315","messageId":"316","endLine":119,"endColumn":43},{"ruleId":"313","severity":1,"message":"389","line":119,"column":45,"nodeType":"315","messageId":"316","endLine":119,"endColumn":51},{"ruleId":"313","severity":1,"message":"318","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":13},{"ruleId":"313","severity":1,"message":"390","line":13,"column":7,"nodeType":"315","messageId":"316","endLine":13,"endColumn":14},{"ruleId":"391","severity":1,"message":"392","line":40,"column":37,"nodeType":"379","endLine":40,"endColumn":65},{"ruleId":"391","severity":1,"message":"392","line":60,"column":37,"nodeType":"379","endLine":60,"endColumn":65},{"ruleId":"313","severity":1,"message":"341","line":2,"column":16,"nodeType":"315","messageId":"316","endLine":2,"endColumn":20},{"ruleId":"313","severity":1,"message":"393","line":4,"column":8,"nodeType":"315","messageId":"316","endLine":4,"endColumn":13},{"ruleId":"313","severity":1,"message":"335","line":3,"column":11,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"336","line":3,"column":16,"nodeType":"315","messageId":"316","endLine":3,"endColumn":19},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'swal' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","unexpected","'full_name' is assigned a value but never used.","'user_name' is assigned a value but never used.","'country' is assigned a value but never used.","'password' is assigned a value but never used.","'confirm_password' is assigned a value but never used.","'email' is assigned a value but never used.","'user_type' is assigned a value but never used.","'position' is assigned a value but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'NavDropdown' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'Table' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'DatePicker' is defined but never used.","'AddQuotation' is defined but never used.","'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Swal' is defined but never used.","'formattedValue' is assigned a value but never used.","'quotation_num' is assigned a value but never used.","'client' is assigned a value but never used.","'clientInvoiceNo' is assigned a value but never used.","'contractorName' is assigned a value but never used.","'purchace_order' is assigned a value but never used.","'vendorInvoiceNo' is assigned a value but never used.","'Spinner' is defined but never used.","'Bar' is defined but never used.","'ChartDataLabels' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'labelAmount' is assigned a value but never used.","'animation' is assigned a value but never used.","'pathOr' is defined but never used.","'equals' is defined but never used.","'head' is defined but never used.","'filter' is defined but never used.","'ReactCountryFlag' is defined but never used.","'ReactFlagsSelect' is defined but never used.","'Us' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'CustomTextBox' is defined but never used.","'Input' is defined but never used.","'Logo' is defined but never used.","'invoice_id' is assigned a value but never used.","'cust_name' is assigned a value but never used.","'cust_id' is assigned a value but never used.","'client_name' is assigned a value but never used.","'contractor_name' is assigned a value but never used.","'country_object' is assigned a value but never used.","'status' is assigned a value but never used.","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]